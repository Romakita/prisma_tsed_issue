generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
  binaryTargets   = ["native", "linux-musl"]
}

generator TSED {
  provider = "TSED-prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Accounts {
  DiscordId      String    @id @db.VarChar(32)
  DiscordName    String    @db.VarChar(50)
  DiscordTag     String    @db.VarChar(50)
  SteamId        String?   @unique(map: "21_Accounts_SteamId_IDX") @db.VarChar(50)
  SteamName      String?   @db.VarChar(50)
  TwitchID       String?   @db.VarChar(50)
  TwitchName     String?   @db.VarChar(50)
  GTALicense     String?   @db.VarChar(50)
  RegisterAt     DateTime  @default(now()) @db.DateTime(0)
  LoginAt        DateTime? @db.DateTime(0)
  Whitelist      Int       @default(0)
  WhitelistDate  DateTime? @db.DateTime(0)
  RulesApprouved DateTime? @db.DateTime(0)
  AdminLevel     String    @default("JOUEUR") @db.VarChar(50)
  Banned         Int       @default(0)
  BannedDate     DateTime? @db.DateTime(0)
  UnbanDate      DateTime? @db.DateTime(0)
  BannedDuration Int?
  BannedReason   String?   @db.LongText
  Entreprise     String    @default("") @db.VarChar(50)
  Faction        String    @default("") @db.VarChar(50)
  players        players[]

  @@index([TwitchID], map: "21_Accounts_TwitchID_IDX")
  @@map("21_Accounts")
}

model admin_tp {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(50)
  category String @default("Autres") @db.VarChar(20)
  x        Float  @db.Float
  y        Float  @db.Float
  z        Float  @db.Float
  head     Float  @db.Float

  @@map("21_admin_tp")
}

model appartement {
  idAppart                    Int                           @id @default(autoincrement())
  x                           Float                         @db.Float
  y                           Float                         @db.Float
  z                           Float                         @db.Float
  h                           Float                         @db.Float
  garageID                    Int?
  playerID                    Int?
  nbrColocPossible            Int                           @default(4) @db.UnsignedInt
  price                       Int?                          @default(1)
  name                        String                        @db.VarChar(50)
  address                     String?                       @default("") @db.VarChar(255)
  idImmeuble                  Int
  district                    String                        @default("") @db.VarChar(10)
  hideBuilding                String?                       @db.LongText
  ipl                         String?                       @db.VarChar(255)
  mlo                         String?                       @db.VarChar(100)
  updated_at                  DateTime                      @default(now()) @db.Timestamp(0)
  crimi_pos_apparts           crimi_pos_apparts[]
  log_crimi_tasks_appartments log_crimi_tasks_appartments[]

  @@index([idImmeuble], map: "21_appartement_idImmeuble_IDX")
  @@index([playerID], map: "21_appartement_playerID_IDX")
  @@map("21_appartement")
}

model appartementannexe {
  id        Int   @id @default(autoincrement())
  appartID  Int
  entreeX   Float @db.Float
  entreeY   Float @db.Float
  entreeZ   Float @db.Float
  entreeH   Float @db.Float
  sortieX   Float @db.Float
  sortieY   Float @db.Float
  sortieZ   Float @db.Float
  sortieH   Float @db.Float
  hide      Int   @default(0)
  useEntree Int   @default(1)
  useSortie Int   @default(1)

  @@map("21_appartementannexe")
}

model atm {
  id            Int   @id @default(autoincrement()) @db.UnsignedInt
  maxAmount     Int   @db.UnsignedInt
  currentAmount Int   @db.UnsignedInt
  x             Float @db.Float
  y             Float @db.Float
  z             Float @db.Float
  zipcode       Int?

  @@map("21_atm")
}

model atm_rob {
  id               Int       @id @default(autoincrement())
  atmID            Int
  playerID         Int
  time             DateTime  @db.DateTime(0)
  amountWhenRobbed Int?
  nbItemStolen     Int?
  hasBell          Boolean?
  next             DateTime? @db.DateTime(0)
  nextInt          Int?
  zipcode          Int?

  @@map("21_atm_rob")
}

model bags_config {
  key   String @unique(map: "21_bags_config_key_IDX") @default("") @db.VarChar(100)
  value Int    @default(0)

  @@map("21_bags_config")
}

model bank_accounts {
  idBankAccount Int    @id @default(autoincrement()) @db.UnsignedInt
  idPlayer      Int?   @unique(map: "playerID") @db.UnsignedInt
  idEntreprise  Int?   @unique(map: "entrepriseID") @db.UnsignedInt
  solde_cash    BigInt @default(0)
  solde_bank    Int    @default(0)

  @@map("21_bank_accounts")
}

model bank_cash_transactions {
  idBankCashTransaction Int      @id @default(autoincrement()) @db.UnsignedInt
  dateTransaction       DateTime @default(now()) @db.DateTime(0)
  idAccountDebit        Int?     @db.UnsignedInt
  idAccountCredit       Int?     @db.UnsignedInt
  amount                Int
  motif                 String   @default("") @db.VarChar(255)
  idPlayerFrom          Int?     @db.UnsignedInt
  idPlayerTo            Int?     @db.UnsignedInt
  postal                Int?     @default(0) @db.UnsignedInt

  @@map("21_bank_cash_transactions")
}

model bank_rob {
  id         Int      @id @default(autoincrement())
  time       DateTime @default(now()) @db.DateTime(0)
  bankID     Int?
  playerID   Int?
  nbrSacMax  Int?
  nbrSacPrit Int?
  next       Int      @default(24)

  @@map("21_bank_rob")
}

model bank_transactions {
  idBankTransaction Int      @id @default(autoincrement()) @db.UnsignedInt
  dateTransaction   DateTime @default(now()) @db.DateTime(0)
  idAccountDebit    Int?     @db.UnsignedInt
  idAccountCredit   Int?     @db.UnsignedInt
  amount            Int
  motif             String   @default("") @db.VarChar(255)
  postal            Int?     @default(0) @db.UnsignedInt

  @@map("21_bank_transactions")
}

model banks {
  id                    Int                     @id @default(autoincrement())
  bankType              banks_bankType
  bankName              String?                 @db.VarChar(100)
  x                     Float                   @db.Float
  y                     Float                   @db.Float
  z                     Float                   @db.Float
  head                  Float                   @db.Float
  currentAmount         Int
  maxAmount             Int
  active                Boolean                 @default(true)
  fillZoneX             Float?                  @db.Float
  fillZoneY             Float?                  @db.Float
  fillZoneZ             Float?                  @db.Float
  lastFilledDate        DateTime?               @db.DateTime(0)
  robPosX               Float?                  @db.Float
  robPosY               Float?                  @db.Float
  robPosZ               Float?                  @db.Float
  doorOpen              Boolean                 @default(false)
  log_crimi_tasks_banks log_crimi_tasks_banks[]

  @@map("21_banks")
}

model bells {
  id            Int     @id @default(autoincrement())
  name          String? @db.VarChar(100)
  x             Float   @db.Float
  y             Float   @db.Float
  z             Float   @db.Float
  entrepriseID  String  @default("[]") @db.VarChar(10)
  message       String? @db.VarChar(255)
  messageNumber String? @db.VarChar(255)
  helperTxt     String? @db.VarChar(255)

  @@map("21_bells")
}

model billiard_score {
  id           Int    @id @default(autoincrement())
  playerID     Int
  gameID       String @db.VarChar(255)
  billiardName String @db.VarChar(255)
  buyParty     Int    @default(0) @db.TinyInt
  shoots       Int    @default(0)
  potteds      Int    @default(0)
  whitePotteds Int    @default(0)

  @@map("21_billiard_score")
}

model bot_authorized_entreprises {
  id            Int    @id @default(autoincrement()) @db.UnsignedInt
  guild         String @db.VarChar(25)
  grades_id     String @db.VarChar(25)
  entreprise_id Int    @unique(map: "entreprise_id") @db.UnsignedInt

  @@map("21_bot_authorized_entreprises")
}

model bot_cron_job {
  id         Int      @id @unique(map: "21_bot_cron_job_id_uindex") @default(autoincrement())
  playerID   Int?
  cible      Int?
  actionTime DateTime @default(now()) @db.Timestamp(0)
  action     String?  @db.LongText
  type       String?  @db.VarChar(50)

  @@map("21_bot_cron_job")
}

model bot_group {
  id                      Int                      @id @default(autoincrement())
  groupId                 Int?
  ownerRoleId             String                   @db.VarChar(255)
  memberRoleId            String                   @db.VarChar(255)
  guildId                 String                   @db.VarChar(255)
  categoryId              String                   @db.VarChar(255)
  deleted                 Boolean?                 @default(false)
  created_at              DateTime                 @default(now()) @db.Timestamp(0)
  updated_at              DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                @db.Timestamp(0)
  businesses_associations businesses_associations? @relation(fields: [groupId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_bot_group_21_businesses_associations_id_fk")

  @@index([groupId], map: "21_bot_group_21_businesses_associations_id_fk")
  @@map("21_bot_group")
}

model bot_ticket {
  id           Int       @id @unique(map: "21_bot_ticket_id_uindex") @default(autoincrement())
  date         DateTime? @default(now()) @db.Timestamp(0)
  transcript   String?   @db.VarChar(255)
  created_by   String?   @db.VarChar(255)
  type         String?   @db.VarChar(20)
  ticketID     Int
  channelID    String?   @db.VarChar(255)
  ticket_name  String?   @db.VarChar(255)
  access       String?   @db.LongText
  trelloCardID String?   @db.VarChar(255)
  ticketState  String?   @default("open") @db.VarChar(255)
  deleted_by   String?   @db.VarChar(255)
  closed_by    String?   @db.VarChar(255)

  @@map("21_bot_ticket")
}

model bot_ticket_auto_response {
  id        Int       @id @unique(map: "21_bot_ticket_auto_response_id_uindex") @default(autoincrement())
  key       String    @unique(map: "21_bot_ticket_auto_response_key_uindex") @db.VarChar(255)
  value     String    @db.LongText
  isEmbed   Boolean?  @default(false)
  deleted   Boolean?  @default(false)
  createdAt DateTime? @default(now()) @db.Timestamp(0)

  @@map("21_bot_ticket_auto_response")
}

model bot_vehicles_returns {
  id           Int          @id @default(autoincrement()) @db.UnsignedInt
  vehicleID    Int
  ownerID      Int?         @db.UnsignedInt
  entrepriseID Int?
  reason       String       @db.Text
  status       Int          @default(0) @db.UnsignedInt
  solution     Int          @default(0)
  solvedBy     String       @default("") @db.Char(255)
  isRepair     Boolean      @default(false)
  type         String?      @default("") @db.VarChar(255)
  releaseTime  DateTime?    @default(now()) @db.Timestamp(0)
  created_at   DateTime?    @default(now()) @db.Timestamp(0)
  updated_at   DateTime?    @db.Timestamp(0)
  vehicles     vehicles     @relation(fields: [vehicleID], references: [vehicleID], onUpdate: Restrict, map: "21_bot_vehicles_returns_FK")
  entreprises  entreprises? @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_bot_vehicles_returns_FK_1")
  players      players?     @relation(fields: [ownerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_bot_vehicles_returns_FK_2")

  @@index([vehicleID], map: "21_bot_vehicles_returns_FK")
  @@index([entrepriseID], map: "21_bot_vehicles_returns_FK_1")
  @@index([ownerID], map: "21_bot_vehicles_returns_FK_2")
  @@map("21_bot_vehicles_returns")
}

model boutique_rob {
  id         Int      @id @default(autoincrement())
  time       DateTime @default(now()) @db.DateTime(0)
  boutiqueID Int?
  playerID   Int?
  type       String   @default("LSPD") @db.VarChar(50)
  nbrSacMax  Int?
  nbrSacPrit Int?
  hasBell    Boolean?
  next       Int      @default(30)

  @@map("21_boutique_rob")
}

model bowling_score {
  id       Int    @id @default(autoincrement())
  playerID Int
  score    String @db.Text
  total    Int

  @@map("21_bowling_score")
}

model businesses_associations {
  id          Int         @id @default(autoincrement())
  type        String      @db.VarChar(255)
  name        String      @db.VarChar(255)
  description String?     @db.Text
  contacts    String      @default("[]") @db.VarChar(255)
  logo        String?     @db.VarChar(255)
  accountant  Int         @default(0) @db.UnsignedInt
  treasurer   Int?        @db.UnsignedInt
  members     String      @default("[]") @db.Text
  status      Boolean     @default(false)
  created_at  DateTime?   @db.Timestamp(0)
  updated_at  DateTime?   @db.Timestamp(0)
  bot_group   bot_group[]

  @@index([name], map: "21_businesses_associations_name_index")
  @@map("21_businesses_associations")
}

model cameras {
  id            Int      @id @default(autoincrement()) @db.UnsignedInt
  name          String?  @db.VarChar(255)
  hash          String?  @db.VarChar(20)
  x             Float    @default(0.000) @db.Float
  y             Float    @default(0.000) @db.Float
  z             Float    @default(0.000) @db.Float
  heading       Float    @default(0.0000) @db.Float
  wantedHeading Float?   @db.Float
  category      String?  @db.VarChar(255)
  active        Boolean? @default(true)

  @@map("21_cameras")
}

model casino_luckyWheel {
  id     Int    @id @default(autoincrement())
  type   String @db.VarChar(255)
  active Int    @default(1) @db.TinyInt
  reward String @db.VarChar(255)
  chance Int?   @default(1)

  @@map("21_casino_luckyWheel")
}

model coloc {
  id       Int @id @default(autoincrement())
  playerID Int
  appartID Int

  @@map("21_coloc")
}

model config {
  name  String @id @db.VarChar(50)
  value String @db.VarChar(255)

  @@map("21_config")
}

model connexion {
  id           Int      @id @default(autoincrement()) @db.UnsignedInt
  serverID     Int      @default(0) @db.UnsignedInt
  connectionID Int      @default(0) @db.UnsignedInt
  playerID     Int      @default(0) @db.UnsignedInt
  steamID      String   @default("") @db.VarChar(50)
  horodatage   DateTime @default(now()) @db.DateTime(0)
  type         String   @default("") @db.VarChar(100)
  playerName   String   @default("") @db.VarChar(255)
  reason       String?  @db.Text
  motif        String   @default("") @db.Text

  @@map("21_connexion")
}

model crimi_config_apparts_props {
  id       Int     @id @default(autoincrement()) @db.UnsignedInt
  hash     String  @default("") @db.VarChar(255)
  hashKey  Int?
  mlo      String? @db.VarChar(100)
  type     String? @db.VarChar(100)
  quantity Int     @default(1)
  remove   Boolean @default(true)
  active   Boolean @default(true)

  @@map("21_crimi_config_apparts_props")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model crimi_config_exclude_areas {
  id     Int?
  x      Float    @db.Float
  y      Float    @db.Float
  z      Float    @db.Float
  radius Int?
  active Boolean?
  sale   Int?     @db.TinyInt
  taxi   Int?     @db.TinyInt

  @@map("21_crimi_config_exclude_areas")
  @@ignore
}

model crimi_config_loots {
  id               Int              @id @default(autoincrement()) @db.UnsignedInt
  type             String           @default("") @db.VarChar(255)
  itemID           Int              @default(0)
  dropRate         Float            @default(0.00) @db.Float
  active           Boolean          @default(true)
  inventaire_items inventaire_items @relation(fields: [itemID], references: [id], onUpdate: Restrict, map: "21_crimi_config_loots_FK")

  @@index([itemID], map: "21_crimi_config_loots_FK")
  @@map("21_crimi_config_loots")
}

model crimi_config_tasks {
  id       Int                         @id @default(autoincrement()) @db.UnsignedInt
  business String                      @default("") @db.VarChar(50)
  task     String                      @default("") @db.VarChar(50)
  key      String                      @default("") @db.VarChar(100)
  value    String                      @default("") @db.Text
  keyType  crimi_config_tasks_keyType?

  @@unique([business, task, key], map: "uniqueKey")
  @@map("21_crimi_config_tasks")
}

model crimi_config_transfos {
  id                                                                    Int               @id @default(autoincrement())
  sourceitemID                                                          Int?
  sourceItemQuantity                                                    Int?
  targetItemID                                                          Int?
  targetItemQuantity                                                    Int?
  time                                                                  Int?
  inventaire_items_crimi_config_transfos_sourceitemIDToinventaire_items inventaire_items? @relation("crimi_config_transfos_sourceitemIDToinventaire_items", fields: [sourceitemID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_crimi_config_transfos_source_FK")
  inventaire_items_crimi_config_transfos_targetItemIDToinventaire_items inventaire_items? @relation("crimi_config_transfos_targetItemIDToinventaire_items", fields: [targetItemID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_crimi_config_transfos_target_FK")

  @@index([sourceitemID], map: "21_crimi_config_transfos_source_FK")
  @@index([targetItemID], map: "21_crimi_config_transfos_target_FK")
  @@map("21_crimi_config_transfos")
}

model crimi_config_vehtraffic {
  id            Int            @id @default(autoincrement()) @db.UnsignedInt
  model         Int?
  name          String?        @db.VarChar(50)
  voiture_civil voiture_civil? @relation(fields: [model], references: [hash], onDelete: Restrict, onUpdate: Restrict, map: "21_crimi_config_vehtraffic_FK")

  @@index([model], map: "21_crimi_config_vehtraffic_FK")
  @@map("21_crimi_config_vehtraffic")
}

model crimi_config_weapons {
  id               Int               @id @default(autoincrement()) @db.UnsignedInt
  itemID           Int?
  weaponID         Int?              @db.UnsignedInt
  price            Int               @default(0)
  min              Int               @default(0)
  max              Int               @default(0)
  type             String?           @db.VarChar(100)
  active           Boolean           @default(true)
  inventaire_items inventaire_items? @relation(fields: [itemID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_crimi_config_weapons_FK_item")
  weapons_list     weapons_list?     @relation(fields: [weaponID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_crimi_config_weapons_FK_weapon")

  @@index([itemID], map: "21_crimi_config_weapons_FK_item")
  @@index([weaponID], map: "21_crimi_config_weapons_FK_weapon")
  @@map("21_crimi_config_weapons")
}

model crimi_config_weapons_crafts {
  id           Int      @id @default(autoincrement()) @db.UnsignedInt
  recipeID     Int?     @db.UnsignedInt
  level        Int      @default(0)
  businessSpec String?  @db.VarChar(100)
  delay        Int?
  recipes      recipes? @relation(fields: [recipeID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_crimi_config_weapons_crafts_FK")

  @@index([recipeID], map: "21_crimi_config_weapons_crafts_FK")
  @@map("21_crimi_config_weapons_crafts")
}

model crimi_config_weaponstraffic {
  id               Int               @id @default(autoincrement()) @db.UnsignedInt
  itemID           Int?
  weaponID         Int?              @db.UnsignedInt
  price            Int               @default(0)
  min              Int               @default(0)
  max              Int               @default(0)
  active           Boolean           @default(true)
  inventaire_items inventaire_items? @relation(fields: [itemID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_crimi_config_weaponstraffic_FK")
  weapons_list     weapons_list?     @relation(fields: [weaponID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_crimi_config_weaponstraffic_FK_1")

  @@index([itemID], map: "21_crimi_config_weapons_FK_item")
  @@index([weaponID], map: "21_crimi_config_weapons_FK_weapon")
  @@map("21_crimi_config_weaponstraffic")
}

model crimi_npc {
  id                                              Int                      @id @default(autoincrement())
  playerID                                        Int?                     @db.UnsignedInt
  x                                               Float                    @db.Float
  y                                               Float                    @db.Float
  z                                               Float                    @db.Float
  h                                               Float                    @db.Float
  active                                          Boolean                  @default(false)
  npcType                                         String?                  @db.VarChar(100)
  main                                            Boolean                  @default(false)
  business                                        String?                  @db.VarChar(100)
  businessSpec                                    String?                  @db.VarChar(100)
  level                                           Int                      @default(0)
  businessXp                                      Int                      @default(0)
  districtXp                                      Int                      @default(0)
  entrepriseID                                    Int?
  garageID                                        Int?
  stockID                                         Int?
  date                                            DateTime?                @db.Date
  comment                                         String                   @default("") @db.Text
  entityID                                        Int?
  apparts                                         String                   @default("[]") @db.VarChar(255)
  commonTrigger                                   String?                  @db.Text
  entreprises_crimi_npc_entityIDToentreprises     entreprises?             @relation("crimi_npc_entityIDToentreprises", fields: [entityID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_crime_npc_FK_entity")
  entreprises_crimi_npc_entrepriseIDToentreprises entreprises?             @relation("crimi_npc_entrepriseIDToentreprises", fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_crimi_npc_FK_entreprise")
  garages                                         garages?                 @relation(fields: [garageID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_crimi_npc_FK_garage")
  players                                         players?                 @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_crimi_npc_FK_player")
  inventaire_pos_stockage                         inventaire_pos_stockage? @relation(fields: [stockID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_crimi_npc_FK_stock")
  crimi_pos_districts                             crimi_pos_districts[]
  log_crimi_district_xp                           log_crimi_district_xp[]
  log_crimi_npc_payement                          log_crimi_npc_payement[]

  @@index([entityID], map: "21_crime_npc_FK_entity")
  @@index([entrepriseID], map: "21_crimi_npc_FK_entreprise")
  @@index([garageID], map: "21_crimi_npc_FK_garage")
  @@index([playerID], map: "21_crimi_npc_FK_player")
  @@index([stockID], map: "21_crimi_npc_FK_stock")
  @@map("21_crimi_npc")
}

model crimi_pos_ammunations {
  id                          Int                           @id @default(autoincrement()) @db.UnsignedInt
  x                           Float                         @default(0) @db.Float
  y                           Float                         @default(0) @db.Float
  z                           Float                         @default(0) @db.Float
  h                           Float                         @default(0) @db.Float
  active                      Boolean                       @default(true)
  log_crimi_tasks_ammunations log_crimi_tasks_ammunations[]

  @@map("21_crimi_pos_ammunations")
}

model crimi_pos_apparts {
  id                          Int                           @id @default(autoincrement()) @db.UnsignedInt
  appartID                    Int
  type                        String?                       @db.VarChar(100)
  outX                        Float                         @db.Float
  outY                        Float                         @db.Float
  outZ                        Float                         @db.Float
  outH                        Float                         @db.Float
  inX                         Float                         @db.Float
  inY                         Float                         @db.Float
  inZ                         Float                         @db.Float
  inH                         Float                         @db.Float
  active                      Int                           @default(1) @db.TinyInt
  appartement                 appartement                   @relation(fields: [appartID], references: [idAppart], onUpdate: Restrict, map: "21_crimi_pos_apparts_FK")
  log_crimi_tasks_appartments log_crimi_tasks_appartments[]

  @@index([appartID], map: "21_crimi_pos_apparts_FK")
  @@map("21_crimi_pos_apparts")
}

model crimi_pos_container {
  id                         Int                          @id @default(autoincrement()) @db.UnsignedInt
  x                          Float                        @db.Float
  y                          Float                        @db.Float
  z                          Float                        @db.Float
  h                          Float?                       @db.Float
  radius                     Float                        @default(10.0) @db.Float
  active                     Int                          @default(1) @db.TinyInt
  log_crimi_tasks_containers log_crimi_tasks_containers[]

  @@map("21_crimi_pos_container")
}

model crimi_pos_crates {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  x                     Float                   @db.Float
  y                     Float                   @db.Float
  z                     Float                   @db.Float
  active                Boolean                 @default(true)
  log_crimi_tasks_crate log_crimi_tasks_crate[]

  @@map("21_crimi_pos_crates")
}

model crimi_pos_custom {
  id     Int     @id @default(autoincrement()) @db.UnsignedInt
  x      Float   @db.Float
  y      Float   @db.Float
  z      Float   @db.Float
  active Boolean @default(true)

  @@map("21_crimi_pos_custom")
}

model crimi_pos_delivery_peds {
  id                       Int                        @id @default(autoincrement()) @db.UnsignedInt
  x                        Float                      @db.Float
  y                        Float                      @db.Float
  z                        Float                      @db.Float
  h                        Float                      @db.Float
  active                   Boolean                    @default(true)
  log_crimi_tasks_ammo     log_crimi_tasks_ammo[]
  log_crimi_tasks_lockpick log_crimi_tasks_lockpick[]

  @@map("21_crimi_pos_delivery_peds")
}

model crimi_pos_districts {
  id        Int       @id @default(autoincrement())
  npcID     Int
  order     Int
  x         Float     @db.Float
  y         Float     @db.Float
  z         Float     @db.Float
  height    Int       @default(5)
  crimi_npc crimi_npc @relation(fields: [npcID], references: [id], onUpdate: Restrict, map: "21_crimi_pos_districts_FK")

  @@index([npcID], map: "21_crimi_pos_districts_FK")
  @@map("21_crimi_pos_districts")
}

model crimi_pos_garden {
  id                      Int                       @id @default(autoincrement()) @db.UnsignedInt
  x                       Float                     @db.Float
  y                       Float                     @db.Float
  z                       Float                     @db.Float
  h                       Float?                    @db.Float
  radius                  Float                     @default(10.0) @db.Float
  active                  Int                       @default(1) @db.TinyInt
  log_crimi_tasks_gardens log_crimi_tasks_gardens[]

  @@map("21_crimi_pos_garden")
}

model crimi_pos_gofast {
  id                     Int                      @id @default(autoincrement()) @db.UnsignedInt
  x                      Float                    @db.Float
  y                      Float                    @db.Float
  z                      Float                    @db.Float
  h                      Float                    @db.Float
  active                 Boolean                  @default(true)
  log_crimi_tasks_gofast log_crimi_tasks_gofast[]

  @@map("21_crimi_pos_gofast")
}

model crimi_pos_jewelery {
  id                       Int                        @id @default(autoincrement()) @db.UnsignedInt
  x                        Float                      @db.Float
  y                        Float                      @db.Float
  z                        Float                      @db.Float
  active                   Boolean                    @default(true)
  loots_unsafe             String                     @default("[]") @db.Text
  loots_safe               String                     @default("[]") @db.Text
  office                   String?                    @db.VarChar(255)
  log_crimi_tasks_jewelery log_crimi_tasks_jewelery[]

  @@map("21_crimi_pos_jewelery")
}

model crimi_pos_marketSafes {
  id                          Int                           @id @default(autoincrement()) @db.UnsignedInt
  x                           Float                         @db.Float
  y                           Float                         @db.Float
  z                           Float                         @db.Float
  active                      Boolean                       @default(true)
  log_crimi_tasks_marketsafes log_crimi_tasks_marketsafes[]

  @@map("21_crimi_pos_marketSafes")
}

model crimi_pos_shops {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  type                  String?                 @db.VarChar(100)
  x                     Float                   @db.Float
  y                     Float                   @db.Float
  z                     Float                   @db.Float
  active                Boolean                 @default(true)
  log_crimi_tasks_shops log_crimi_tasks_shops[]

  @@map("21_crimi_pos_shops")
}

model crimi_pos_shops_npcs {
  id       Int     @id @default(autoincrement()) @db.UnsignedInt
  x        Float   @db.Float
  y        Float   @db.Float
  z        Float   @db.Float
  h        Float   @db.Float
  playerID Int?
  active   Boolean @default(true)

  @@map("21_crimi_pos_shops_npcs")
}

model crimi_pos_veh_lux {
  id                     Int                      @id @default(autoincrement()) @db.UnsignedInt
  x                      Float                    @db.Float
  y                      Float                    @db.Float
  z                      Float                    @db.Float
  h                      Float                    @db.Float
  active                 Int                      @default(1) @db.TinyInt
  log_crimi_tasks_vehlux log_crimi_tasks_vehlux[]

  @@map("21_crimi_pos_veh_lux")
}

model crimi_pos_vehtraffic {
  id                         Int                          @id @default(autoincrement()) @db.UnsignedInt
  x                          Float                        @db.Float
  y                          Float                        @db.Float
  z                          Float                        @db.Float
  h                          Float?                       @db.Float
  active                     Boolean                      @default(true)
  log_crimi_tasks_vehtraffic log_crimi_tasks_vehtraffic[]

  @@map("21_crimi_pos_vehtraffic")
}

model custom {
  id           Int    @id @default(autoincrement())
  name         String @db.VarChar(50)
  x            Float  @db.Float
  y            Float  @db.Float
  z            Float  @db.Float
  marquer      Int    @default(1)
  disable      Int    @default(0)
  entrepriseID Int    @default(0)

  @@map("21_custom")
}

model doors {
  id     Int     @id @default(autoincrement())
  model  String? @db.VarChar(100)
  x      Float?  @db.Float
  y      Float?  @db.Float
  z      Float?  @db.Float
  name   String? @unique(map: "21_doors_UN") @db.VarChar(100)
  acces  String? @db.VarChar(100)
  active Boolean @default(true)

  @@map("21_doors")
}

model ems_takeblood {
  id       Int      @id @default(autoincrement())
  playerID Int
  date     DateTime @default(now()) @db.DateTime(0)

  @@map("21_ems_takeblood")
}

model entreprise_mapping_paiement {
  id           Int       @id @default(autoincrement())
  entrepriseID Int       @default(0)
  name         String    @db.VarChar(250)
  price        Int       @default(0)
  done         Int       @default(0)
  created_at   DateTime? @default(now()) @db.Timestamp(0)
  updated_at   DateTime? @default(now()) @db.Timestamp(0)

  @@map("21_entreprise_mapping_paiement")
}

model entreprises {
  entrepriseID                                  Int                           @id @default(autoincrement())
  nom                                           String                        @db.VarChar(50)
  garage_id                                     Int
  money                                         Int
  shortName                                     String                        @db.VarChar(25)
  garage_id_hel                                 Int                           @default(0)
  discordId                                     String?                       @db.VarChar(50)
  contact                                       Int                           @default(0)
  garage_id_boat                                Int                           @default(0)
  gang                                          Int                           @default(0)
  entrepriseType                                String                        @default("0") @db.VarChar(10)
  entrepriseSubtype                             String?                       @db.VarChar(10)
  contactOrder                                  Int?                          @default(100)
  district                                      String                        @default("") @db.VarChar(1)
  parentEID                                     Int?
  bot_vehicles_returns                          bot_vehicles_returns[]
  crimi_npc_crimi_npc_entityIDToentreprises     crimi_npc[]                   @relation("crimi_npc_entityIDToentreprises")
  crimi_npc_crimi_npc_entrepriseIDToentreprises crimi_npc[]                   @relation("crimi_npc_entrepriseIDToentreprises")
  entreprises                                   entreprises?                  @relation("entreprisesToentreprises", fields: [parentEID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_entreprises_FK")
  other_entreprises                             entreprises[]                 @relation("entreprisesToentreprises")
  log_crimi_npc_xp                              log_crimi_npc_xp[]
  log_crimi_tasks_ammo                          log_crimi_tasks_ammo[]
  log_crimi_tasks_ammunations                   log_crimi_tasks_ammunations[]
  log_crimi_tasks_appartments                   log_crimi_tasks_appartments[]
  log_crimi_tasks_banks                         log_crimi_tasks_banks[]
  log_crimi_tasks_containers                    log_crimi_tasks_containers[]
  log_crimi_tasks_crate                         log_crimi_tasks_crate[]
  log_crimi_tasks_delivery                      log_crimi_tasks_delivery[]
  log_crimi_tasks_fields                        log_crimi_tasks_fields[]
  log_crimi_tasks_gardens                       log_crimi_tasks_gardens[]
  log_crimi_tasks_gofast                        log_crimi_tasks_gofast[]
  log_crimi_tasks_jewelery                      log_crimi_tasks_jewelery[]
  log_crimi_tasks_laundry                       log_crimi_tasks_laundry[]
  log_crimi_tasks_lockpick                      log_crimi_tasks_lockpick[]
  log_crimi_tasks_markets                       log_crimi_tasks_markets[]
  log_crimi_tasks_marketsafes                   log_crimi_tasks_marketsafes[]
  log_crimi_tasks_recipes                       log_crimi_tasks_recipes[]
  log_crimi_tasks_resale                        log_crimi_tasks_resale[]
  log_crimi_tasks_sales                         log_crimi_tasks_sales[]
  log_crimi_tasks_vehlux                        log_crimi_tasks_vehlux[]
  log_crimi_tasks_vehtraffic                    log_crimi_tasks_vehtraffic[]
  radars_pos                                    radars_pos[]
  tablet_applications                           tablet_applications[]

  @@index([parentEID], map: "21_entreprises_FK")
  @@index([entrepriseType], map: "21_entreprises_entrepriseType_IDX")
  @@index([entrepriseID], map: "entrepriseID")
  @@map("21_entreprises")
}

model entreprises_players {
  id                 Int     @id @default(autoincrement())
  entreprise_id      Int
  steam_id           String? @db.VarChar(50)
  playerID           Int     @unique(map: "playerID")
  role_id            Int
  rank_id            Int     @default(1)
  employeeUnion      Boolean @default(false)
  registrationNumber String  @default("0") @db.VarChar(50)

  @@index([entreprise_id], map: "entrepriseID")
  @@map("21_entreprises_players")
}

model entreprises_ranks {
  id           BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  entrepriseID Int     @db.UnsignedInt
  name         String  @db.VarChar(255)
  rankNumber   Int     @default(10) @db.UnsignedInt
  discordId    String? @db.VarChar(50)
  salaire      Int     @default(0)

  @@map("21_entreprises_ranks")
}

model entreprises_roles {
  id        Int    @id @default(autoincrement())
  name      String @db.VarChar(50)
  do_recrut Int    @default(0)
  do_fin    Int    @default(0)

  @@map("21_entreprises_roles")
}

model event_eastereggs_pos {
  id   Int   @id @default(autoincrement()) @db.UnsignedInt
  posX Float @default(0.00000) @db.Float
  posY Float @default(0.00000) @db.Float
  posZ Float @default(0.00000) @db.Float
  rotX Float @default(0.00000) @db.Float
  rotY Float @default(0.00000) @db.Float
  rotZ Float @default(0.00000) @db.Float
  rotW Float @default(0.00000) @db.Float

  @@map("21_event_eastereggs_pos")
}

model events {
  id        Int       @id @default(autoincrement())
  startDate DateTime? @db.DateTime(0)
  endDate   DateTime? @db.DateTime(0)
  active    Int?      @default(1)
  itemID    Int?
  nbrItem   Int
  notif     String    @db.MediumText
  titre     String    @db.VarChar(50)
  icon      String    @db.VarChar(50)

  @@map("21_events")
}

model events_kdo {
  id         Int    @id @default(autoincrement())
  idItemFrom Int?
  itemID1    Int?
  nbrItem1   Int?
  nomItem1   String @db.VarChar(50)
  itemID2    Int?
  nbrItem2   Int?
  nomItem2   String @db.VarChar(50)
  itemID3    Int?
  nbrItem3   Int?
  nomItem3   String @db.VarChar(50)
  active     Int?
  resultMin  Int?
  resultMax  Int?

  @@map("21_events_kdo")
}

model farm_livraison {
  id           Int     @id
  x            Float   @db.Float
  y            Float   @db.Float
  z            Float   @db.Float
  item         Int?
  nbrItem      Int?
  time         Int?
  entrepriseID Int?
  type         String? @db.VarChar(50)
  price        Int?
  poleEmploi   Int

  @@map("21_farm_livraison")
}

model farm_pole_emploi {
  id            Int     @id
  x             Float   @db.Float
  y             Float   @db.Float
  z             Float   @db.Float
  type          String? @db.VarChar(50)
  veh           String? @db.VarChar(50)
  itemLivraison Int?
  nbrLivraison  Int?
  entrepriseID  Int?
  name          String  @db.VarChar(50)
  active        Boolean @default(true)

  @@map("21_farm_pole_emploi")
}

model farm_position_taxi {
  id      Int   @id
  x       Float @db.Float
  y       Float @db.Float
  z       Float @db.Float
  head    Float @db.Float
  pedX    Float @db.Float
  pedY    Float @db.Float
  pedZ    Float @db.Float
  pedHead Float @db.Float
  disable Int?

  @@map("21_farm_position_taxi")
}

model farm_recolte {
  id                     Int                      @id @default(autoincrement())
  x                      Float                    @db.Float
  y                      Float                    @db.Float
  z                      Float                    @db.Float
  rayon                  Float                    @db.Float
  entrepriseID           Int?
  item                   Int?
  min                    Int?
  max                    Int?
  time                   Float                    @db.Float
  anim                   String?                  @db.LongText
  nomItem                String?                  @db.VarChar(50)
  isVisible              Int
  type                   String                   @db.VarChar(50)
  maxQuantity            Int?                     @db.UnsignedInt
  currentQuantity        Int?                     @db.UnsignedInt
  itemByUpdate           Int?
  autoUpdateTime         Int?
  active                 Boolean                  @default(true)
  crimi                  Int                      @default(0)
  log_crimi_tasks_fields log_crimi_tasks_fields[]

  @@map("21_farm_recolte")
}

model farm_recolte_boutique {
  id         Int      @id @default(autoincrement())
  boutiqueID Int
  playerID   Int
  time       DateTime @default(now()) @db.Timestamp(0)

  @@map("21_farm_recolte_boutique")
}

model farm_transfo_simple {
  id             Int     @id @default(autoincrement())
  x              Float   @db.Float
  y              Float   @db.Float
  z              Float   @db.Float
  item           Int?
  nbrItem        Int?
  nomItem        String? @db.VarChar(50)
  itemTransfo    Int?
  nbrItemTransfo Int?
  nomItemTransfo String? @db.VarChar(50)
  time           Int?
  rayon          Int?
  entrepriseID   Int?
  isVisible      Int
  active         Boolean @default(true)

  @@map("21_farm_transfo_simple")
}

model farm_vente {
  id           Int     @id
  x            Float   @db.Float
  y            Float   @db.Float
  z            Float   @db.Float
  entrepriseID Int?
  item         Int?
  price        Int?
  time         Int?
  nomItem      String? @db.VarChar(50)
  nbrItem      Int
  poleEmploi   Int     @default(0)
  isVisible    Int
  active       Boolean @default(true)

  @@map("21_farm_vente")
}

model fire_scenario {
  id              Int     @id @default(autoincrement())
  name            String  @db.VarChar(255)
  maxSpread       Int     @default(0)
  maxChanceSpread Int     @default(0)
  type            String? @db.VarChar(100)
  active          Boolean @default(true)

  @@map("21_fire_scenario")
}

model fire_scenario_data {
  id         Int   @id @default(autoincrement())
  x          Float @db.Float
  y          Float @db.Float
  z          Float @db.Float
  life       Int   @default(20)
  scenarioID Int?

  @@map("21_fire_scenario_data")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model fishing_config {
  id     Int?
  itemID Int?
  proba  Int?
  active Boolean

  @@map("21_fishing_config")
  @@ignore
}

model games_course {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  x           Float     @db.Float
  y           Float     @db.Float
  z           Float     @db.Float
  panneauX    Float     @default(0) @db.Float
  panneauY    Float     @default(0) @db.Float
  panneauZ    Float     @default(0) @db.Float
  panneauH    Float     @default(0) @db.Float
  panneauPage String?   @db.VarChar(500)
  car         String?   @db.VarChar(50)
  disable     Int       @default(0)
  laps        Int       @default(1) @db.UnsignedInt
  startDate   DateTime? @db.Timestamp(0)
  endDate     DateTime? @db.Timestamp(0)

  @@map("21_games_course")
}

model games_results {
  id           Int      @id @default(autoincrement())
  idCourse     Int
  playerID     Int
  timeCourse   Int
  vehicleModel String?  @db.VarChar(255)
  vehicleClass Int?
  vehicleLabel String?  @db.VarChar(255)
  vehiclePlate String?  @db.VarChar(255)
  racekey      String?  @db.VarChar(255)
  timestamp    DateTime @default(now()) @db.Timestamp(0)
  disable      Int      @default(0)

  @@map("21_games_results")
}

model games_results_laps {
  id           Int      @id @default(autoincrement())
  idCourse     Int
  playerID     Int
  lap          Int
  lapTime      Int
  vehicleModel String?  @db.VarChar(255)
  vehicleClass Int?
  vehicleLabel String?  @db.VarChar(255)
  vehiclePlate String?  @db.VarChar(255)
  racekey      String?  @db.VarChar(255)
  timestamp    DateTime @default(now()) @db.Timestamp(0)
  disable      Int      @default(0)

  @@map("21_games_results_laps")
}

model games_waypoints {
  id       Int      @id @default(autoincrement())
  x        Float    @db.Float
  y        Float    @db.Float
  z        Float    @db.Float
  h        Float    @db.Float
  idCourse Int
  time     DateTime @default(now()) @db.Timestamp(0)

  @@map("21_games_waypoints")
}

model games_waypoints_old {
  id       Int      @id @default(autoincrement())
  x        Float    @db.Float
  y        Float    @db.Float
  z        Float    @db.Float
  h        Float    @db.Float
  idCourse Int
  time     DateTime @default(now()) @db.Timestamp(0)

  @@map("21_games_waypoints.old")
}

model garages {
  id           Int         @id @default(autoincrement())
  name         String      @db.VarChar(50)
  x            Float       @db.Float
  y            Float       @db.Float
  z            Float       @db.Float
  marquer      Int         @default(1)
  disable      Int         @default(0)
  playerID     Int?        @default(0)
  fourriere    Int         @default(0)
  entrepriseID Int         @default(0)
  appartID     Int         @default(0)
  type         String      @default("veh") @db.VarChar(10)
  tpIn         Int         @default(1)
  outX         Float?      @db.Float
  outY         Float?      @db.Float
  outZ         Float?      @db.Float
  outH         Float?      @db.Float
  isPaid       Int?
  isTrigger    Int?
  maxCapacity  Int?
  nrbVehIn     Int?
  crimi_npc    crimi_npc[]

  @@map("21_garages")
}

model gas_pumps {
  id           Int     @id @default(autoincrement())
  tankID       Int?
  entrepriseID Int?
  x            Float   @db.Float
  y            Float   @db.Float
  z            Float   @db.Float
  radius       Float   @db.Float
  vehicleType  String? @db.VarChar(255)
  props        String? @db.LongText

  @@map("21_gas_pumps")
}

model gas_tanks {
  tankID       Int      @id @default(autoincrement())
  public       Boolean?
  name         String?  @db.VarChar(50)
  x            Float    @db.Float
  y            Float    @db.Float
  z            Float    @db.Float
  maxQuantity  Int?
  quantity     Int?     @db.UnsignedInt
  gasType      String?  @db.VarChar(255)
  vehType      String?  @db.VarChar(100)
  props        String?  @db.LongText
  entrepriseID Int      @default(0)
  disable      Boolean  @default(false)

  @@map("21_gas_tanks")
}

model gofast {
  id           Int      @id @default(autoincrement())
  entrepriseID Int
  playerID     Int
  date         DateTime @default(now()) @db.DateTime(0)
  nbr          Int
  type         String   @db.VarChar(50)
  done         Int      @default(0)
  del          Int      @default(0)
  position     Int

  @@map("21_gofast")
}

model golf_score {
  id        Int      @id @default(autoincrement())
  playerID  Int
  name      String   @db.VarChar(255)
  score     String   @db.LongText
  total     Int
  timestamp DateTime @default(now()) @db.Timestamp(0)

  @@map("21_golf_score")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model hunt_config {
  id          Int?
  itemID      Int?
  animal      String? @db.VarChar(100)
  randomMin   Int?
  randomMax   Int?
  proba       Int?
  quantityMax Int?
  active      Int     @default(1) @db.TinyInt

  @@map("21_hunt_config")
  @@ignore
}

model immeuble {
  idImmeuble Int     @id @default(autoincrement())
  x          Float   @db.Float
  y          Float   @db.Float
  z          Float   @db.Float
  h          Float   @db.Float
  name       String  @db.VarChar(50)
  disable    Int     @default(0)
  modelHide  String? @db.LongText
  zone       String  @db.VarChar(255)

  @@map("21_immeuble")
}

model interaction_animkey {
  id        Int     @default(autoincrement()) @db.UnsignedInt
  playerID  Int?
  key_bind  String  @db.VarChar(128)
  anim_name String? @db.VarChar(128)

  @@id([id, key_bind])
  @@map("21_interaction_animkey")
}

model interaction_settings {
  id           Int     @id @default(autoincrement())
  PID          String  @unique(map: "PID") @db.VarChar(50)
  settings     String  @db.LongText
  walkingStyle String? @db.LongText

  @@map("21_interaction_settings")
}

model inventaire_items {
  id                                                                         Int                           @id @default(autoincrement())
  name                                                                       String                        @db.VarChar(50)
  memo                                                                       String?                       @db.Text
  type                                                                       String?                       @db.VarChar(50)
  price                                                                      Int                           @default(0) @db.UnsignedInt
  sellPrice                                                                  Int                           @default(0)
  blackPrice                                                                 Int                           @default(0) @db.UnsignedInt
  weight                                                                     Float                         @default(0) @db.Float
  usable                                                                     Int                           @default(0)
  stackable                                                                  Int                           @default(1) @db.TinyInt
  active                                                                     Int                           @default(1) @db.UnsignedInt
  image                                                                      String?                       @db.VarChar(255)
  onUse                                                                      String?                       @db.LongText
  onRemove                                                                   String?                       @db.LongText
  onAdd                                                                      String?                       @db.LongText
  onGive                                                                     String?                       @db.LongText
  data                                                                       String?                       @db.LongText
  anim                                                                       String?                       @db.LongText
  defaultMetadata                                                            String?                       @db.LongText
  visibleMetadata                                                            String?                       @db.LongText
  crimi_config_loots                                                         crimi_config_loots[]
  crimi_config_transfos_crimi_config_transfos_sourceitemIDToinventaire_items crimi_config_transfos[]       @relation("crimi_config_transfos_sourceitemIDToinventaire_items")
  crimi_config_transfos_crimi_config_transfos_targetItemIDToinventaire_items crimi_config_transfos[]       @relation("crimi_config_transfos_targetItemIDToinventaire_items")
  crimi_config_weapons                                                       crimi_config_weapons[]
  crimi_config_weaponstraffic                                                crimi_config_weaponstraffic[]
  log_crimi_tasks_ammo                                                       log_crimi_tasks_ammo[]
  log_crimi_tasks_resale                                                     log_crimi_tasks_resale[]
  log_crimi_tasks_sales                                                      log_crimi_tasks_sales[]

  @@map("21_inventaire_items")
}

model inventaire_player {
  id       BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  PlayerID Int     @default(0) @db.UnsignedInt
  item     Int     @default(0) @db.UnsignedInt
  quantity Int     @default(0) @db.UnsignedInt
  metadata String? @db.LongText

  @@unique([PlayerID, item], map: "PlayerID")
  @@index([item], map: "21_inventaire_player_item_IDX")
  @@map("21_inventaire_player")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model inventaire_pos_stockage {
  id           Int         @id @default(autoincrement())
  entrepriseId Int         @default(0)
  name         String      @default("Stockage") @db.VarChar(50)
  x            Float       @db.Float
  y            Float       @db.Float
  z            Float       @db.Float
  isPublic     Int         @default(0)
  isPersonnal  Int         @default(0)
  depositRank  Int         @default(0)
  accessRank   Int?
  maxWeight    Float?      @db.Float
  marker       Int         @default(1)
  type         Int         @default(1)
  appartID     Int         @default(0)
  crimi_npc    crimi_npc[]

  @@map("21_inventaire_pos_stockage")
}

model inventaire_stockage {
  id         BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  stockageID Int
  playerID   Int     @default(-1)
  item       Int     @default(0) @db.UnsignedInt
  quantity   Int     @default(0) @db.UnsignedInt
  metadata   String? @db.LongText

  @@unique([stockageID, playerID, item], map: "stockageID")
  @@map("21_inventaire_stockage")
}

model ipls {
  id           Int    @id @default(autoincrement())
  label        String @db.VarChar(255)
  ymap         String @db.VarChar(255)
  active       Int    @default(0) @db.TinyInt
  entrepriseID Int    @default(0)
  hide         Int    @default(0)

  @@map("21_ipls")
}

model ipls_entitysets {
  id            Int     @id @default(autoincrement())
  nom           String  @db.VarChar(50)
  ipl           String  @db.VarChar(50)
  x             Float   @db.Float
  y             Float   @db.Float
  z             Float   @db.Float
  entitySetName String  @db.VarChar(50)
  active        Boolean @default(false)
  hide          Boolean @default(false)
  entrepriseID  Int     @default(0)

  @@map("21_ipls_entitysets")
}

model jail {
  id          Int        @id @default(autoincrement()) @db.UnsignedInt
  playerID    Int        @default(0) @db.UnsignedInt
  jailTime    Int        @default(0) @db.UnsignedInt
  evade       Boolean    @default(false)
  name        String     @db.VarChar(50)
  enterDate   DateTime   @default(now()) @db.Timestamp(0)
  endDate     DateTime?  @db.Timestamp(0)
  evasionDate DateTime?  @db.Timestamp(0)
  totalTime   Int        @default(0) @db.UnsignedInt
  canEvade    Boolean    @default(true)
  log_jail    log_jail[]

  @@map("21_jail")
}

model licenses_config {
  id          Int      @id @default(autoincrement()) @db.UnsignedInt
  name        String?  @db.VarChar(255)
  model       String?  @db.VarChar(255)
  price       Int?
  speed       Boolean?
  damage      Boolean?
  markerType  Int?
  markerColor String?  @db.VarChar(50)
  markerSize  String?  @db.VarChar(50)
  distance    Float?   @db.Float
  positionID  Int?     @db.UnsignedInt

  @@map("21_licenses_config")
}

model licenses_positions {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(100)
  x    Float?  @db.Float
  y    Float?  @db.Float
  z    Float?  @db.Float

  @@map("21_licenses_positions")
}

model licenses_waypoints {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  licenseID Int?   @db.UnsignedInt
  trackID   Int
  x         Float? @db.Float
  y         Float? @db.Float
  z         Float? @db.Float
  h         Float? @db.Float
  speed     Int?

  @@map("21_licenses_waypoints")
}

model lights {
  id       Int      @id @default(autoincrement()) @db.UnsignedInt
  showID   Int?     @default(0) @db.UnsignedInt
  name     String?  @db.VarChar(255)
  hash     String?  @db.VarChar(20)
  x        Float    @default(0.000) @db.Float
  y        Float    @default(0.000) @db.Float
  z        Float    @default(0.000) @db.Float
  rotation String   @default("{}") @db.VarChar(255)
  active   Boolean? @default(true)

  @@map("21_lights")
}

model lights_sequences {
  id      Int     @id @default(autoincrement()) @db.UnsignedInt
  showID  Int?    @default(0) @db.UnsignedInt
  lightID Int?    @default(0) @db.UnsignedInt
  key     String? @db.VarChar(255)
  keyArgs String? @db.Text
  step    Int     @default(0) @db.UnsignedInt
  active  Boolean @default(true)

  @@map("21_lights_sequences")
}

model lockers {
  id           Int      @id @default(autoincrement()) @db.UnsignedInt
  name         String   @default("0") @db.VarChar(50)
  x            Float    @default(0) @db.Float
  y            Float    @default(0) @db.Float
  z            Float    @default(0) @db.Float
  heading      Float    @default(0) @db.Float
  entrepriseID Int      @default(0)
  active       Boolean? @default(true)

  @@map("21_lockers")
}

model log_21custom {
  id              Int      @id @default(autoincrement())
  playerId        Int
  vehPID          Int?
  vehEntreprise   Int?
  plate           String?  @db.VarChar(10)
  date            DateTime @default(now()) @db.DateTime(0)
  otherPlayerData String?  @db.LongText

  @@map("21_log_21custom")
}

model log_afkkick {
  id       Int      @id @default(autoincrement())
  steam    String?  @db.VarChar(50)
  playerID Int
  time     DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_afkkick")
}

model log_bans {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  steamID    String    @db.VarChar(255)
  by         String    @db.VarChar(255)
  reason     String    @db.VarChar(255)
  duration   Int       @default(0) @db.UnsignedInt
  type       String?   @db.VarChar(100)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  @@map("21_log_bans")
}

model log_ben_repair {
  id           Int      @id @default(autoincrement()) @db.UnsignedInt
  playerID     Int      @db.UnsignedInt
  entrepriseID Int      @default(0) @db.UnsignedInt
  vehEntID     Int      @default(0) @db.UnsignedInt
  plate        String?  @db.VarChar(255)
  repairType   String?  @db.VarChar(255)
  timestamp    DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_ben_repair")
}

model log_blanchiment_pnj {
  id           Int      @id @default(autoincrement())
  entrepriseID Int
  playerID     Int
  nombre       Int
  date         DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_blanchiment_pnj")
}

model log_casino_blackjack {
  id           Int      @id @default(autoincrement())
  playerID     Int
  timestamp    DateTime @default(now()) @db.Timestamp(0)
  gameId       Int
  bet_amount   Int
  win_amount   Int
  hand_value   Int
  hand_card    String   @db.VarChar(255)
  dealer_value Int
  dealer_card  String   @db.VarChar(255)

  @@map("21_log_casino_blackjack")
}

model log_casino_insideTrack {
  id           Int      @id @default(autoincrement())
  playerID     Int
  timestamp    DateTime @default(now()) @db.Timestamp(0)
  bet_amount   Int      @default(0)
  win_amount   Int      @default(0)
  horse_bet    Int
  horse_result String   @db.VarChar(255)

  @@map("21_log_casino_insideTrack")
}

model log_casino_poker {
  id                   Int      @id @default(autoincrement())
  playerID             Int
  timestamp            DateTime @default(now()) @db.Timestamp(0)
  gameId               Int
  bet_amount           Int
  bet_pair_plus_amount Int
  win_amount           Int
  hand_value           Int
  hand_card            String   @db.VarChar(255)
  dealer_value         Int
  dealer_card          String   @db.VarChar(255)

  @@map("21_log_casino_poker")
}

model log_casino_roulette {
  id             Int      @id @default(autoincrement())
  playerID       Int
  timestamp      DateTime @default(now()) @db.Timestamp(0)
  gameId         Int
  bet_amount     Int
  win_amount     Int
  bet_value      String   @db.VarChar(255)
  winning_number String   @db.VarChar(255)

  @@map("21_log_casino_roulette")
}

model log_casino_slot {
  id               Int      @id @default(autoincrement())
  playerID         Int
  slot_machine     String   @db.VarChar(255)
  slot_win         Int      @default(0)
  slot_bet         Int
  slot_win_montant Int
  result           String   @db.VarChar(255)
  timestamp        DateTime @default(now()) @db.DateTime(0)

  @@map("21_log_casino_slot")
}

model log_change_plates {
  id       Int      @id @default(autoincrement())
  playerID Int
  vehID    Int
  oldPlate String   @db.VarChar(50)
  newPlate String   @db.VarChar(50)
  date     DateTime @default(now()) @db.DateTime(0)

  @@map("21_log_change_plates")
}

model log_christmas {
  id       Int      @id @default(autoincrement())
  playerID Int?
  date     DateTime @default(now()) @db.DateTime(0)

  @@map("21_log_christmas")
}

model log_crimi_district_alerts {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  districtID Int?     @db.UnsignedInt
  percent    Int      @default(0)
  level      Int      @db.UnsignedInt
  created_at DateTime @default(now()) @db.Timestamp(0)
  active     Boolean  @default(true)

  @@map("21_log_crimi_district_alerts")
}

model log_crimi_district_attacks {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  zoneID     Int?
  xpStart    Int?
  xpEnd      Int?
  done       Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_crimi_district_attacks")
}

model log_crimi_district_swap {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  attacker   Int?
  outsider   Int?
  expulsion  Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_crimi_district_swap")
}

model log_crimi_district_xp {
  id         Int        @id @default(autoincrement()) @db.UnsignedInt
  zoneID     Int?
  quantity   Int
  action     String?    @db.VarChar(255)
  players    String?    @db.Text
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  crimi_npc  crimi_npc? @relation(fields: [zoneID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_district_xp_FK")

  @@index([zoneID], map: "21_log_crimi_district_xp_FK")
  @@map("21_log_crimi_district_xp")
}

model log_crimi_npc_payement {
  id           Int       @id @default(autoincrement())
  playerID     Int?      @db.UnsignedInt
  entrepriseID Int?
  npcID        Int
  type         String?   @db.VarChar(100)
  amount       Int
  created_at   DateTime  @default(now()) @db.Timestamp(0)
  crimi_npc    crimi_npc @relation(fields: [npcID], references: [id], onUpdate: Restrict, map: "21_log_crimi_npc_payement_FK")
  players      players?  @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_npc_payement_FK_1")

  @@index([npcID], map: "21_log_crimi_npc_payement_FK")
  @@index([playerID], map: "21_log_crimi_npc_payement_FK_1")
  @@map("21_log_crimi_npc_payement")
}

model log_crimi_npc_xp {
  id           Int          @id @default(autoincrement()) @db.UnsignedInt
  entrepriseID Int?
  playerID     Int?         @db.UnsignedInt
  quantity     Int
  action       String?      @db.VarChar(255)
  created_at   DateTime     @default(now()) @db.Timestamp(0)
  updated_at   DateTime     @default(now()) @db.Timestamp(0)
  entreprises  entreprises? @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_npc_xp_FK")

  @@index([entrepriseID], map: "21_log_crimi_npc_xp_FK")
  @@map("21_log_crimi_npc_xp")
}

model log_crimi_tasks_ammo {
  id                      Int                      @id @default(autoincrement())
  entrepriseID            Int?
  playerID                Int?                     @db.UnsignedInt
  position                Int?                     @db.UnsignedInt
  itemID                  Int                      @default(0)
  quantityMax             Int                      @default(0)
  quantityDelivered       Int                      @default(0)
  started                 Int                      @default(0)
  done                    Int                      @default(0)
  hasBell                 Int                      @default(0)
  created_at              DateTime                 @default(now()) @db.Timestamp(0)
  updated_at              DateTime                 @default(now()) @db.Timestamp(0)
  entreprises             entreprises?             @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_ammo_FK_entreprise")
  inventaire_items        inventaire_items         @relation(fields: [itemID], references: [id], onUpdate: Restrict, map: "21_log_crimi_tasks_ammo_FK_item")
  players                 players?                 @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_ammo_FK_player")
  crimi_pos_delivery_peds crimi_pos_delivery_peds? @relation(fields: [position], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_ammo_FK_pos")

  @@index([entrepriseID], map: "21_log_crimi_tasks_ammo_FK_entreprise")
  @@index([itemID], map: "21_log_crimi_tasks_ammo_FK_item")
  @@index([playerID], map: "21_log_crimi_tasks_ammo_FK_player")
  @@index([position], map: "21_log_crimi_tasks_ammo_FK_pos")
  @@map("21_log_crimi_tasks_ammo")
}

model log_crimi_tasks_ammunations {
  id                    Int                    @id @default(autoincrement())
  entrepriseID          Int?
  playerID              Int?                   @db.UnsignedInt
  position              Int?                   @db.UnsignedInt
  done                  Boolean                @default(false)
  price                 Int                    @default(0)
  hasBell               Boolean                @default(false)
  next                  Int                    @default(0)
  created_at            DateTime               @default(now()) @db.Timestamp(0)
  updated_at            DateTime               @default(now()) @db.Timestamp(0)
  crimi_pos_ammunations crimi_pos_ammunations? @relation(fields: [position], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_ammunations_FK")
  entreprises           entreprises?           @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_ammunations_FK_entreprise")
  players               players?               @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_ammunations_FK_player")

  @@index([position], map: "21_log_crimi_tasks_ammunations_FK")
  @@index([entrepriseID], map: "21_log_crimi_tasks_ammunations_FK_entreprise")
  @@index([playerID], map: "21_log_crimi_tasks_ammunations_FK_player")
  @@map("21_log_crimi_tasks_ammunations")
}

model log_crimi_tasks_appartments {
  id                 Int                @id @default(autoincrement())
  entrepriseID       Int?
  playerID           Int?               @db.UnsignedInt
  position           Int?               @db.UnsignedInt
  appartID           Int                @default(0)
  started            Int                @default(0)
  quantityDecoration Int                @default(0)
  quantityElectro    Int                @default(0)
  quantityLux        Int                @default(0)
  hasBell            Int                @default(0)
  next               Int                @default(0)
  created_at         DateTime           @default(now()) @db.Timestamp(0)
  updated_at         DateTime           @default(now()) @db.Timestamp(0)
  appartement        appartement        @relation(fields: [appartID], references: [idAppart], onUpdate: Restrict, map: "21_log_crimi_tasks_appartments_FK_appart")
  entreprises        entreprises?       @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_appartments_FK_entreprise")
  players            players?           @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_appartments_FK_player")
  crimi_pos_apparts  crimi_pos_apparts? @relation(fields: [position], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_appartments_FK_pos")

  @@index([appartID], map: "21_log_crimi_tasks_appartments_FK_appart")
  @@index([entrepriseID], map: "21_log_crimi_tasks_appartments_FK_entreprise")
  @@index([playerID], map: "21_log_crimi_tasks_appartments_FK_player")
  @@index([position], map: "21_log_crimi_tasks_appartments_FK_pos")
  @@map("21_log_crimi_tasks_appartments")
}

model log_crimi_tasks_banks {
  id           Int          @id @default(autoincrement())
  entrepriseID Int?
  playerID     Int?         @db.UnsignedInt
  bankID       Int?
  money        Int          @default(0)
  quantity     Int          @default(0)
  next         Int          @default(24)
  created_at   DateTime     @default(now()) @db.Timestamp(0)
  updated_at   DateTime     @default(now()) @db.Timestamp(0)
  banks        banks?       @relation(fields: [bankID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_banks_FK_bank")
  entreprises  entreprises? @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_banks_FK_entreprise")
  players      players?     @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_banks_FK_player")

  @@index([bankID], map: "21_log_crimi_tasks_banks_FK_bank")
  @@index([entrepriseID], map: "21_log_crimi_tasks_banks_FK_entreprise")
  @@index([playerID], map: "21_log_crimi_tasks_banks_FK_player")
  @@map("21_log_crimi_tasks_banks")
}

model log_crimi_tasks_containers {
  id                  Int                  @id @default(autoincrement())
  entrepriseID        Int?
  playerID            Int?                 @db.UnsignedInt
  position            Int?                 @db.UnsignedInt
  containers          Int                  @default(0)
  quantity            Int                  @default(0)
  quantityMax         Int                  @default(0)
  done                Boolean              @default(false)
  hasBell             Boolean              @default(false)
  next                Int                  @default(0)
  created_at          DateTime             @default(now()) @db.Timestamp(0)
  updated_at          DateTime             @default(now()) @db.Timestamp(0)
  entreprises         entreprises?         @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_containers_FK_enteprise")
  players             players?             @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_containers_FK_player")
  crimi_pos_container crimi_pos_container? @relation(fields: [position], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_containers_FK_pos")

  @@index([entrepriseID], map: "21_log_crimi_tasks_containers_FK_enteprise")
  @@index([playerID], map: "21_log_crimi_tasks_containers_FK_player")
  @@index([position], map: "21_log_crimi_tasks_containers_FK_pos")
  @@map("21_log_crimi_tasks_containers")
}

model log_crimi_tasks_crate {
  id               Int               @id @default(autoincrement())
  entrepriseID     Int?
  playerID         Int?              @db.UnsignedInt
  position         Int?              @db.UnsignedInt
  type             String?           @db.VarChar(50)
  items            String            @default("[]") @db.Text
  status           String?           @db.VarChar(100)
  openBy           Int               @default(0)
  emptyBy          Int               @default(0)
  hasBell          Boolean           @default(false)
  created_at       DateTime          @default(now()) @db.Timestamp(0)
  updated_at       DateTime          @default(now()) @db.Timestamp(0)
  entreprises      entreprises?      @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_crate_FK_enteprise")
  players          players?          @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_crate_FK_player")
  crimi_pos_crates crimi_pos_crates? @relation(fields: [position], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_crate_FK_pos")

  @@index([entrepriseID], map: "21_log_crimi_tasks_crate_FK_enteprise")
  @@index([playerID], map: "21_log_crimi_tasks_crate_FK_player")
  @@index([position], map: "21_log_crimi_tasks_crate_FK_pos")
  @@map("21_log_crimi_tasks_crate")
}

model log_crimi_tasks_delivery {
  id           Int          @id @default(autoincrement())
  entrepriseID Int?
  playerID     Int?         @db.UnsignedInt
  type         String       @default("0") @db.VarChar(50)
  quantity     Int          @default(0)
  price        Int          @default(0)
  created_at   DateTime     @default(now()) @db.Timestamp(0)
  entreprises  entreprises? @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_delivery_FK_enteprise")
  players      players?     @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_delivery_FK_player")

  @@index([entrepriseID], map: "21_log_crimi_tasks_delivery_FK_enteprise")
  @@index([playerID], map: "21_log_crimi_tasks_delivery_FK_player")
  @@map("21_log_crimi_tasks_delivery")
}

model log_crimi_tasks_extraloots {
  id         Int      @id @default(autoincrement())
  type       String?  @db.VarChar(255)
  robID      Int      @db.UnsignedInt
  loots      String   @default("[]") @db.Text
  created_at DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_crimi_tasks_extraloots")
}

model log_crimi_tasks_fields {
  id           Int           @id @default(autoincrement())
  entrepriseID Int?
  playerID     Int?          @db.UnsignedInt
  fieldID      Int?
  quantity     Int           @default(0)
  created_at   DateTime      @default(now()) @db.Timestamp(0)
  updated_at   DateTime      @default(now()) @db.Timestamp(0)
  entreprises  entreprises?  @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_fields_FK_entreprise")
  farm_recolte farm_recolte? @relation(fields: [fieldID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_fields_FK_field")
  players      players?      @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_fields_FK_player")

  @@index([entrepriseID], map: "21_log_crimi_tasks_fields_FK_entreprise")
  @@index([fieldID], map: "21_log_crimi_tasks_fields_FK_field")
  @@index([playerID], map: "21_log_crimi_tasks_fields_FK_player")
  @@map("21_log_crimi_tasks_fields")
}

model log_crimi_tasks_gardens {
  id               Int               @id @default(autoincrement())
  entrepriseID     Int?
  playerID         Int?              @db.UnsignedInt
  position         Int?              @db.UnsignedInt
  started          Int               @default(0)
  quantity         Int               @default(0)
  quantityMax      Int               @default(0)
  done             Boolean           @default(false)
  hasBell          Boolean           @default(false)
  next             Int               @default(0)
  created_at       DateTime          @default(now()) @db.Timestamp(0)
  updated_at       DateTime          @default(now()) @db.Timestamp(0)
  entreprises      entreprises?      @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_gardens_FK_entreprise")
  players          players?          @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_gardens_FK_player")
  crimi_pos_garden crimi_pos_garden? @relation(fields: [position], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_gardens_FK_pos")

  @@index([entrepriseID], map: "21_log_crimi_tasks_gardens_FK_entreprise")
  @@index([playerID], map: "21_log_crimi_tasks_gardens_FK_player")
  @@index([position], map: "21_log_crimi_tasks_gardens_FK_pos")
  @@map("21_log_crimi_tasks_gardens")
}

model log_crimi_tasks_gofast {
  id                Int               @id @default(autoincrement())
  entrepriseID      Int?
  playerID          Int?              @db.UnsignedInt
  position          Int?              @db.UnsignedInt
  type              String            @default("") @db.VarChar(50)
  quality           String            @default("") @db.VarChar(50)
  quantityRequested Int               @default(0)
  started           Int               @default(0)
  quantityDelivered Int               @default(0)
  price             Int               @default(0)
  hasBell           Boolean           @default(false)
  created_at        DateTime          @default(now()) @db.Timestamp(0)
  updated_at        DateTime          @default(now()) @db.Timestamp(0)
  entreprises       entreprises?      @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_gofast_FK")
  players           players?          @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_gofast_FK_1")
  crimi_pos_gofast  crimi_pos_gofast? @relation(fields: [position], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_gofast_FK_2")

  @@index([entrepriseID], map: "21_log_crimi_tasks_gofast_FK")
  @@index([playerID], map: "21_log_crimi_tasks_gofast_FK_1")
  @@index([position], map: "21_log_crimi_tasks_gofast_FK_2")
  @@map("21_log_crimi_tasks_gofast")
}

model log_crimi_tasks_jewelery {
  id                 Int                 @id @default(autoincrement())
  entrepriseID       Int?
  playerID           Int?                @db.UnsignedInt
  position           Int?                @db.UnsignedInt
  done               Boolean             @default(false)
  hasBell            Boolean             @default(false)
  next               Int                 @default(0)
  quantitySilver     Int                 @default(0)
  quantityGold       Int                 @default(0)
  quantityDiam       Int                 @default(0)
  quantityTGSF       Int                 @default(0)
  created_at         DateTime            @default(now()) @db.Timestamp(0)
  updated_at         DateTime            @default(now()) @db.Timestamp(0)
  entreprises        entreprises?        @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_jewelery_FK_enterprise")
  players            players?            @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_jewelery_FK_player")
  crimi_pos_jewelery crimi_pos_jewelery? @relation(fields: [position], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_jewelery_FK_pos")

  @@index([entrepriseID], map: "21_log_crimi_tasks_jewelery_FK_enterprise")
  @@index([playerID], map: "21_log_crimi_tasks_jewelery_FK_player")
  @@index([position], map: "21_log_crimi_tasks_jewelery_FK_pos")
  @@map("21_log_crimi_tasks_jewelery")
}

model log_crimi_tasks_laundry {
  id           Int          @id @default(autoincrement())
  entrepriseID Int?
  playerID     Int?         @db.UnsignedInt
  quantity     Int          @default(0)
  laundred     Int          @default(0)
  created_at   DateTime     @default(now()) @db.Timestamp(0)
  entreprises  entreprises? @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_laundry_FK_entreprise")
  players      players?     @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_laundry_FK_player")

  @@index([entrepriseID], map: "21_log_crimi_tasks_laundry_FK_entreprise")
  @@index([playerID], map: "21_log_crimi_tasks_laundry_FK_player")
  @@map("21_log_crimi_tasks_laundry")
}

model log_crimi_tasks_lockpick {
  id                      Int                      @id @default(autoincrement())
  entrepriseID            Int?
  playerID                Int?                     @db.UnsignedInt
  position                Int?                     @db.UnsignedInt
  quantity                Int                      @default(0)
  quantityMax             Int                      @default(0)
  done                    Int                      @default(0)
  hasBell                 Int                      @default(0)
  created_at              DateTime                 @default(now()) @db.Timestamp(0)
  updated_at              DateTime                 @default(now()) @db.Timestamp(0)
  entreprises             entreprises?             @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_lockpick_FK_entreprise")
  players                 players?                 @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_lockpick_FK_player")
  crimi_pos_delivery_peds crimi_pos_delivery_peds? @relation(fields: [position], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_lockpick_FK_pos")

  @@index([entrepriseID], map: "21_log_crimi_tasks_lockpick_FK_entreprise")
  @@index([playerID], map: "21_log_crimi_tasks_lockpick_FK_player")
  @@index([position], map: "21_log_crimi_tasks_lockpick_FK_pos")
  @@map("21_log_crimi_tasks_lockpick")
}

model log_crimi_tasks_markets {
  id           Int          @id @default(autoincrement())
  entrepriseID Int?
  playerID     Int?         @db.UnsignedInt
  marketID     Int?
  quantityMax  Int          @default(0)
  quantity     Int          @default(0)
  hasBell      Boolean      @default(false)
  next         Int          @default(0)
  created_at   DateTime     @default(now()) @db.Timestamp(0)
  updated_at   DateTime     @default(now()) @db.Timestamp(0)
  entreprises  entreprises? @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_markets_FK_entreprise")
  players      players?     @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_markets_FK_player")
  posboutique  posboutique? @relation(fields: [marketID], references: [boutiqueID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_markets_FK_pos")

  @@index([entrepriseID], map: "21_log_crimi_tasks_markets_FK_entreprise")
  @@index([playerID], map: "21_log_crimi_tasks_markets_FK_player")
  @@index([marketID], map: "21_log_crimi_tasks_markets_FK_pos")
  @@map("21_log_crimi_tasks_markets")
}

model log_crimi_tasks_marketsafes {
  id                    Int                   @id @default(autoincrement())
  entrepriseID          Int?
  playerID              Int?                  @db.UnsignedInt
  safeID                Int                   @default(0) @db.UnsignedInt
  quantityMax           Int                   @default(0)
  quantity              Int                   @default(0)
  hasBell               Boolean               @default(false)
  next                  Int                   @default(0)
  created_at            DateTime              @default(now()) @db.Timestamp(0)
  updated_at            DateTime              @default(now()) @db.Timestamp(0)
  entreprises           entreprises?          @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_marketsafes_FK_entreprise")
  players               players?              @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_marketsafes_FK_player")
  crimi_pos_marketSafes crimi_pos_marketSafes @relation(fields: [safeID], references: [id], onUpdate: Restrict, map: "21_log_crimi_tasks_marketsafes_FK_pos")

  @@index([entrepriseID], map: "21_log_crimi_tasks_marketsafes_FK_entreprise")
  @@index([playerID], map: "21_log_crimi_tasks_marketsafes_FK_player")
  @@index([safeID], map: "21_log_crimi_tasks_marketsafes_FK_pos")
  @@map("21_log_crimi_tasks_marketsafes")
}

model log_crimi_tasks_pharma {
  id          Int         @id @default(autoincrement())
  playerID    Int?        @db.UnsignedInt
  pharmaID    Int         @default(0)
  quantityMax Int         @default(0)
  quantity    Int         @default(0)
  hasBell     Boolean     @default(false)
  next        Int         @default(0)
  created_at  DateTime    @default(now()) @db.Timestamp(0)
  updated_at  DateTime    @default(now()) @db.Timestamp(0)
  players     players?    @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_pharma_FK_player")
  posboutique posboutique @relation(fields: [pharmaID], references: [boutiqueID], onUpdate: Restrict, map: "21_log_crimi_tasks_pharma_FK_pos")

  @@index([playerID], map: "21_log_crimi_tasks_pharma_FK_player")
  @@index([pharmaID], map: "21_log_crimi_tasks_pharma_FK_pos")
  @@map("21_log_crimi_tasks_pharma")
}

model log_crimi_tasks_recipes {
  id           Int          @id @default(autoincrement()) @db.UnsignedInt
  recipeID     Int?         @db.UnsignedInt
  entrepriseID Int?
  playerID     Int?         @db.UnsignedInt
  created_at   DateTime     @default(now()) @db.Timestamp(0)
  entreprises  entreprises? @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_recipes_FK_entreprise")
  players      players?     @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_recipes_FK_player")
  recipes      recipes?     @relation(fields: [recipeID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_recipes_FK_recipe")

  @@index([entrepriseID], map: "21_log_crimi_tasks_recipes_FK_entreprise")
  @@index([playerID], map: "21_log_crimi_tasks_recipes_FK_player")
  @@index([recipeID], map: "21_log_crimi_tasks_recipes_FK_recipe")
  @@map("21_log_crimi_tasks_recipes")
}

model log_crimi_tasks_resale {
  id               Int              @id @default(autoincrement())
  entrepriseID     Int?
  playerID         Int?             @db.UnsignedInt
  itemID           Int
  quantity         Int
  money            Int
  created_at       DateTime         @default(now()) @db.Timestamp(0)
  entreprises      entreprises?     @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_resale_FK_entreprise")
  inventaire_items inventaire_items @relation(fields: [itemID], references: [id], onUpdate: Restrict, map: "21_log_crimi_tasks_resale_FK_item")
  players          players?         @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_resale_FK_player")

  @@index([entrepriseID], map: "21_log_crimi_tasks_resale_FK_entreprise")
  @@index([itemID], map: "21_log_crimi_tasks_resale_FK_item")
  @@index([playerID], map: "21_log_crimi_tasks_resale_FK_player")
  @@map("21_log_crimi_tasks_resale")
}

model log_crimi_tasks_sales {
  id               Int              @id @default(autoincrement())
  entrepriseID     Int?
  playerID         Int?             @db.UnsignedInt
  itemID           Int              @default(0)
  quantity         Int              @default(0)
  quality          String           @default("") @db.VarChar(50)
  price            Int              @default(0)
  hasBell          Boolean          @default(false)
  created_at       DateTime         @default(now()) @db.Timestamp(0)
  entreprises      entreprises?     @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_sales_FK_entreprise")
  inventaire_items inventaire_items @relation(fields: [itemID], references: [id], onUpdate: Restrict, map: "21_log_crimi_tasks_sales_FK_item")
  players          players?         @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_sales_FK_player")

  @@index([entrepriseID], map: "21_log_crimi_tasks_sales_FK_entreprise")
  @@index([itemID], map: "21_log_crimi_tasks_sales_FK_item")
  @@index([playerID], map: "21_log_crimi_tasks_sales_FK_player")
  @@map("21_log_crimi_tasks_sales")
}

model log_crimi_tasks_shops {
  id              Int             @id @default(autoincrement())
  playerID        Int?            @db.UnsignedInt
  shopID          Int             @default(0) @db.UnsignedInt
  shopType        String?         @db.VarChar(100)
  quantityMax     Int             @default(0)
  quantity        Int             @default(0)
  hasBell         Boolean         @default(false)
  next            Int             @default(0)
  created_at      DateTime        @default(now()) @db.Timestamp(0)
  updated_at      DateTime        @default(now()) @db.Timestamp(0)
  players         players?        @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_shops_FK_player")
  crimi_pos_shops crimi_pos_shops @relation(fields: [shopID], references: [id], onUpdate: Restrict, map: "21_log_crimi_tasks_shops_FK_shop")

  @@index([playerID], map: "21_log_crimi_tasks_shops_FK_player")
  @@index([shopID], map: "21_log_crimi_tasks_shops_FK_shop")
  @@map("21_log_crimi_tasks_shops")
}

model log_crimi_tasks_vehlux {
  id                Int                @id @default(autoincrement()) @db.UnsignedInt
  entrepriseID      Int?
  playerID          Int?               @db.UnsignedInt
  position          Int?               @db.UnsignedInt
  model             String             @default("") @db.VarChar(50)
  name              String             @default("") @db.VarChar(50)
  step              Int                @default(0)
  price             Int                @default(0)
  done              Int                @default(0)
  created_at        DateTime           @default(now()) @db.Timestamp(0)
  updated_at        DateTime           @default(now()) @db.Timestamp(0)
  entreprises       entreprises?       @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_vehlux_FK_entreprise")
  players           players?           @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_vehlux_FK_player")
  crimi_pos_veh_lux crimi_pos_veh_lux? @relation(fields: [position], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_vehlux_FK_pos")

  @@index([entrepriseID], map: "21_log_crimi_tasks_vehlux_FK_entreprise")
  @@index([playerID], map: "21_log_crimi_tasks_vehlux_FK_player")
  @@index([position], map: "21_log_crimi_tasks_vehlux_FK_pos")
  @@map("21_log_crimi_tasks_vehlux")
}

model log_crimi_tasks_vehtraffic {
  id                   Int                   @id @default(autoincrement()) @db.UnsignedInt
  entrepriseID         Int?
  playerID             Int?                  @db.UnsignedInt
  position             Int?                  @db.UnsignedInt
  model                String                @default("") @db.VarChar(50)
  name                 String                @default("") @db.VarChar(50)
  quantity             Int?                  @default(0)
  created_at           DateTime              @default(now()) @db.Timestamp(0)
  updated_at           DateTime              @default(now()) @db.Timestamp(0)
  entreprises          entreprises?          @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_vehtraffic_FK")
  players              players?              @relation(fields: [playerID], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_vehtraffic_FK_1")
  crimi_pos_vehtraffic crimi_pos_vehtraffic? @relation(fields: [position], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_crimi_tasks_vehtraffic_FK_2")

  @@index([entrepriseID], map: "21_log_crimi_tasks_vehtraffic_FK")
  @@index([playerID], map: "21_log_crimi_tasks_vehtraffic_FK_1")
  @@index([position], map: "21_log_crimi_tasks_vehtraffic_FK_2")
  @@map("21_log_crimi_tasks_vehtraffic")
}

model log_deaths {
  id                 Int       @id @default(autoincrement()) @db.UnsignedInt
  playerID           Int
  needs              String?   @db.VarChar(255)
  health             String?   @db.VarChar(255)
  source             String?   @db.VarChar(255)
  srcPID             Int?
  cause              String?   @db.VarChar(255)
  causeDetails       String?   @db.VarChar(255)
  timestamp          DateTime  @default(now()) @db.Timestamp(0)
  message_created_at DateTime? @db.Timestamp(0)
  message            String?   @db.LongText
  resurrected_by     Int?
  resurrected_at     DateTime? @db.Timestamp(0)

  @@map("21_log_deaths")
}

model log_essence {
  id            Int      @id @default(autoincrement())
  playerID      Int?
  value         Int
  prix          Int
  entreprise_id Int?
  stationID     Int
  timestamp     DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_essence")
}

model log_essence_explosion {
  id                Int      @id @default(autoincrement())
  stationID         Int
  remainingQuantity Int
  explosionType     Int
  timestamp         DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_essence_explosion")
}

model log_essence_refill {
  id        Int      @id @default(autoincrement())
  playerID  Int?
  stationID Int
  quantity  Int
  timestamp DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_essence_refill")
}

model log_events {
  id       Int      @id @default(autoincrement())
  playerID Int?
  date     DateTime @default(now()) @db.DateTime(0)
  itemID   Int

  @@map("21_log_events")
}

model log_find {
  id       Int      @id @default(autoincrement())
  model    String   @db.VarChar(50)
  x        Float    @db.Float
  y        Float    @db.Float
  z        Float    @db.Float
  playerID Int
  time     DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_find")
}

model log_fourrierebennys {
  id       Int      @id @default(autoincrement())
  playerID Int
  date     DateTime @default(now()) @db.DateTime(0)

  @@map("21_log_fourrierebennys")
}

model log_hunt {
  id        Int      @id @default(autoincrement())
  animal    String?  @db.VarChar(100)
  x         Float    @db.Float
  y         Float    @db.Float
  z         Float    @db.Float
  items     String   @db.MediumText
  playerID  Int?
  timestamp DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_hunt")
}

model log_ipls {
  id       Int      @id @default(autoincrement())
  playerID Int
  iplID    Int
  actif    Int      @db.TinyInt
  date     DateTime @default(now()) @db.DateTime(0)

  @@map("21_log_ipls")
}

model log_jail {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  playerID    Int       @default(0) @db.UnsignedInt
  timeLeft    Int       @default(0) @db.UnsignedInt
  evasionDate DateTime  @default(now()) @db.Timestamp(0)
  enterDate   DateTime? @db.Timestamp(0)
  evasionType String    @db.VarChar(50)
  jailID      Int?      @db.UnsignedInt
  jail        jail?     @relation(fields: [jailID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_log_jail_FK")

  @@index([jailID], map: "21_log_jail_FK")
  @@map("21_log_jail")
}

model log_joueurs_rocades {
  id      Int      @id @default(autoincrement()) @db.UnsignedInt
  timing  DateTime @default(now()) @db.Timestamp(0)
  joueurs Int      @db.UnsignedInt
  rocade  Int      @db.UnsignedInt

  @@map("21_log_joueurs_rocades")
}

model log_luckyWheel_casino {
  id       Int      @id @default(autoincrement())
  playerID Int
  reward   String   @db.VarChar(255)
  date     DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_luckyWheel_casino")
}

model log_mission {
  id       Int      @id @default(autoincrement())
  playerID Int
  time     DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_mission")
}

model log_police_sorter {
  id             Int      @id @default(autoincrement())
  playerID       Int?
  inputQuantity  Int
  outputQuantity Int
  timestamp      DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_police_sorter")
}

model log_radar {
  id          Int      @id @default(autoincrement())
  autorise    Int
  plaque      String?  @db.VarChar(25)
  speed       String?  @db.VarChar(25)
  vMax        String?  @db.VarChar(25)
  points      Int?
  identifiant String?  @db.VarChar(50)
  playerID    Int?
  price       Int?
  date        DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_radar")
}

model log_retraitpoints {
  id           Int      @id @default(autoincrement()) @db.UnsignedInt
  playerID     Int      @default(0)
  permisID     Int      @default(0)
  points       Int      @default(0)
  reason       String   @db.Text
  playerIdFrom Int      @default(0)
  timestamp    DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_retraitpoints")
}

model log_shop_refill {
  id           Int      @id @default(autoincrement())
  playerID     Int?
  entrepriseID Int?
  shopID       Int
  quantity     Int
  price        Int
  error        Int?
  timestamp    DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_shop_refill")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_streamer {
  id        Int       @id @unique(map: "21_log_streamer_id_uindex") @default(autoincrement())
  discordId String?   @db.VarChar(255)
  startDate DateTime? @default(now()) @db.Timestamp(0)
  endDate   DateTime? @db.Timestamp(0)
  streamId  String?   @db.VarChar(255)
  duration  Int?      @default(0)

  @@map("21_log_streamer")
}

model log_taxi {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  startPos  Int?     @default(0) @db.UnsignedInt
  endPos    Int?     @default(0) @db.UnsignedInt
  distance  Float    @default(0) @db.Float
  startTime DateTime @default(now()) @db.Timestamp(0)
  endTime   DateTime @default(now()) @db.Timestamp(0)
  reason    String?  @db.Text
  price     Int?     @default(0)
  playerID  Int?     @default(0)

  @@map("21_log_taxi")
}

model log_twitch_bot {
  id        Int       @id @unique(map: "21_log_twitch_bot_id_uindex") @default(autoincrement())
  stream    String?   @db.VarChar(255)
  discordID String?   @db.VarChar(255)
  date      DateTime? @default(now()) @db.Timestamp(0)

  @@map("21_log_twitch_bot")
}

model log_veh_in_garage {
  id         Int      @id @default(autoincrement())
  vehiculeID Int
  garageID   Int
  playerID   Int
  time       DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_veh_in_garage")
}

model log_veh_lux {
  id       Int      @id @default(autoincrement())
  groupeID Int
  playerID Int
  nameVeh  String   @db.VarChar(50)
  time     DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_veh_lux")
}

model log_vehicles_licenses {
  id         Int       @id @default(autoincrement())
  playerID   Int?
  licenseID  Int?
  created_at DateTime? @default(now()) @db.Timestamp(0)

  @@map("21_log_vehicles_licenses")
}

model log_vehicles_owner_changes {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  vehicleID      Int       @db.UnsignedInt
  plate          String    @db.VarChar(10)
  fromPlayerID   Int       @default(0) @db.UnsignedInt
  toPlayerID     Int       @default(0) @db.UnsignedInt
  byPlayerID     Int       @default(0) @db.UnsignedInt
  byEntrepriseID Int       @default(0) @db.UnsignedInt
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@map("21_log_vehicles_owner_changes")
}

model log_weapons_saves {
  id        Int      @id @default(autoincrement())
  playerID  Int      @default(0)
  saveDatas String   @default("[]") @db.MediumText
  timestamp DateTime @default(now()) @db.Timestamp(0)

  @@map("21_log_weapons_saves")
}

model logrepairandclean {
  id        Int      @id @default(autoincrement())
  playerID  Int
  text      String   @db.MediumText
  timestamp DateTime @default(now()) @db.Timestamp(0)

  @@map("21_logrepairandclean")
}

model mag_stocks {
  id              Int     @id @default(autoincrement()) @db.UnsignedInt
  shopID          Int     @default(0) @db.UnsignedInt
  x               Float   @db.Float
  y               Float   @db.Float
  z               Float   @db.Float
  itemID          Int     @default(0) @db.UnsignedInt
  entrepriseID    Int     @default(0) @db.UnsignedInt
  maxQuantity     Int     @default(0)
  currentQuantity Int     @default(0) @db.UnsignedInt
  price           Int     @default(0) @db.UnsignedInt
  itemByAction    Int     @default(1)
  timeByAction    Int     @default(1000)
  inverted        Boolean @default(false)
  autoUpdateTime  Int     @default(60000)
  itemByUpdate    Int     @default(1)
  active          Boolean @default(true)

  @@map("21_mag_stocks")
}

model maladie {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(255)
  taux         Float    @db.Float
  contaminant  Boolean? @default(false)
  type         String   @db.VarChar(10)
  blemish      Int?
  complexion   Int?
  lipstick     String?  @db.VarChar(20)
  visuel       String?  @db.VarChar(255)
  intensity    Float?   @db.Float
  ragdoll      Int?
  walkingStyle String?  @db.VarChar(255)
  shakeCam     Boolean? @default(false)
  other        String?  @db.LongText
  idItemSoin   Int

  @@map("21_maladie")
}

model maladies_players {
  id        Int      @id @default(autoincrement())
  playerID  Int
  maladieID Int
  timestamp DateTime @default(now()) @db.Timestamp(0)
  active    Boolean? @default(true)

  @@map("21_maladies_players")
}

model messenger_group_player_link {
  id         Int                              @id @default(autoincrement())
  playerID   Int                              @db.UnsignedInt
  groupID    Int
  role       messenger_group_player_link_role @default(BASIC)
  deleted    Boolean                          @default(false)
  created_at DateTime                         @default(now()) @db.Timestamp(0)
  updated_at DateTime                         @default(now()) @db.Timestamp(0)
  deleted_at Int?
  group      messenger_groups                 @relation(fields: [groupID], references: [id], onUpdate: Restrict, map: "21_messenger_group_player_link_21_messenger_groups_id_fk")
  player     players                          @relation(fields: [playerID], references: [playerID], onUpdate: Restrict, map: "21_messenger_group_player_link_21_players_playerID_fk")

  @@index([groupID], map: "21_messenger_group_player_link_21_messenger_groups_id_fk")
  @@index([playerID], map: "21_messenger_group_player_link_21_players_playerID_fk")
  @@map("21_messenger_group_player_link")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model messenger_groups {
  id             Int                           @id @default(autoincrement())
  groupOwnerId   Int                           @db.UnsignedInt
  name           String?                       @db.VarChar(255)
  canReadHistory Boolean                       @default(true)
  deleted        Boolean                       @default(false)
  created_at     DateTime                      @default(now()) @db.Timestamp(0)
  updated_at     DateTime                      @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?                     @db.Timestamp(0)
  members        messenger_group_player_link[]
  owner          players                       @relation(fields: [groupOwnerId], references: [playerID], onUpdate: Restrict, map: "21_messenger_groups_21_players_playerID_fk")
  messages       messenger_messages[]

  @@index([groupOwnerId], map: "21_messenger_groups_21_players_playerID_fk")
  @@index([created_at], map: "21_messenger_groups_created_at_index")
  @@fulltext([name], map: "name")
  @@map("21_messenger_groups")
}

model messenger_messages {
  id                Int                  @id @default(autoincrement())
  messengerGroupId  Int
  responseMessageId Int?
  senderPlayerId    Int                  @db.UnsignedInt
  attachmentId      Int?
  content           String?              @db.LongText
  deleted           Boolean              @default(false)
  created_at        DateTime             @default(now()) @db.Timestamp(0)
  updated_at        DateTime             @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?            @db.Timestamp(0)
  messenger_groups  messenger_groups     @relation(fields: [messengerGroupId], references: [id], onUpdate: Restrict, map: "21_messenger_messages_21_messenger_groups_id_fk")
  players           players              @relation(fields: [senderPlayerId], references: [playerID], onUpdate: Restrict, map: "21_messenger_messages_21_players_playerID_fk")
  responseTo        messenger_messages?  @relation("messenger_messagesTomessenger_messages", fields: [responseMessageId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "21_messenger_messages_messenger_messages_id_fk")
  parents           messenger_messages[] @relation("messenger_messagesTomessenger_messages")

  @@index([messengerGroupId], map: "21_messenger_messages_21_messenger_groups_id_fk")
  @@index([senderPlayerId], map: "21_messenger_messages_21_players_playerID_fk")
  @@index([created_at], map: "21_messenger_messages_created_at_index")
  @@index([responseMessageId], map: "21_messenger_messages_messenger_messages_id_fk")
  @@map("21_messenger_messages")
}

model messenger_messages_attachment {
  id         Int      @id @default(autoincrement())
  fileId     Int
  link       String?  @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)

  @@map("21_messenger_messages_attachment")
}

model npcs {
  id          Int     @id @default(autoincrement())
  model       String? @db.VarChar(50)
  x           Float   @db.Float
  y           Float   @db.Float
  z           Float   @db.Float
  h           Float   @db.Float
  components  String  @db.Text
  props       String  @db.Text
  weapon      String? @db.VarChar(100)
  playerID    Int?
  charClothes Boolean @default(true)
  renderDist  Float?  @db.Float
  active      Boolean @default(true)

  @@map("21_npcs")
}

model parkings_places_players {
  id               Int     @id @default(autoincrement())
  playerID         Int     @unique(map: "playerID") @db.UnsignedInt
  number           Int     @default(2)
  placePrise       Int     @default(0)
  nbrBateau        Int     @default(0)
  placePriseBateau Int     @default(0)
  nbrVol           Int     @default(0)
  placeVolant      Int     @default(0)
  nbrTenue         Int     @default(5)
  players          players @relation(fields: [playerID], references: [playerID], onUpdate: Restrict, map: "21_parkings_places_players_FK")

  @@map("21_parkings_places_players")
}

model permis {
  id             Int     @id @default(autoincrement())
  permisName     String  @db.VarChar(50)
  posDebutX      Float?  @db.Float
  posDebutY      Float?  @db.Float
  posDebutZ      Float?  @db.Float
  posDebutH      Float?  @db.Float
  posFinX        Float?  @db.Float
  posFinY        Float?  @db.Float
  posFinZ        Float?  @db.Float
  model          String? @db.VarChar(50)
  price          Int?
  canSpeed       Int     @default(0)
  canDommage     Int     @default(0)
  idPositionMenu Int?
  typeMarker     Int?
  colorMarker    String? @db.MediumText
  dist           Int?
  taille         String? @db.MediumText

  @@map("21_permis")
}

model perquisition {
  id       Int      @id @default(autoincrement())
  appartID Int
  playerID Int
  time     DateTime @default(now()) @db.Timestamp(0)

  @@map("21_perquisition")
}

model phone_app_chat {
  id      Int      @id @default(autoincrement())
  channel String   @db.VarChar(20)
  message String   @db.VarChar(255)
  time    DateTime @default(now()) @db.Timestamp(0)

  @@map("21_phone_app_chat")
}

model phone_call_history {
  id          Int       @id @default(autoincrement())
  callID      String?   @db.VarChar(250)
  playerID    Int?
  transmitter String    @db.VarChar(10)
  receiver    String    @db.VarChar(10)
  callTime    String?   @db.VarChar(250)
  time        DateTime? @default(now()) @db.Timestamp(0)
  missed      Boolean?  @default(false)
  deleted     Boolean?  @default(false)

  @@index([callID], map: "21_phone_call_history_callID_IDX")
  @@index([playerID], map: "21_phone_call_history_playerID_IDX")
  @@index([receiver], map: "21_phone_call_history_receiver_IDX")
  @@index([transmitter], map: "21_phone_call_history_transmitter_IDX")
  @@map("21_phone_call_history")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model phone_calls {
  id       Int      @id @default(autoincrement())
  owner    String   @db.VarChar(10)
  num      String   @db.VarChar(10)
  incoming Int
  time     DateTime @default(now()) @db.Timestamp(0)
  accepts  Int

  @@map("21_phone_calls")
}

model phone_enterprise_opening {
  id           Int      @id @default(autoincrement())
  EnterpriseID Int
  name         String?  @db.VarChar(255)
  image_code   String?  @db.VarChar(255)
  disable      Boolean? @default(false)
  blip         Int?
  blipColor    Int      @default(4)
  x            Float?   @db.Float
  y            Float?   @db.Float
  z            Float?   @db.Float
  notif_open   String?  @db.LongText
  notif_close  String?  @db.LongText

  @@map("21_phone_enterprise_opening")
}

model phone_enterprise_opening_log {
  id          Int       @id @default(autoincrement())
  playerID    Int
  openingID   Int
  openStatus  Boolean
  update_time DateTime? @default(now()) @db.Timestamp(0)

  @@map("21_phone_enterprise_opening_log")
}

model phone_entreprise {
  id         Int      @id @default(autoincrement())
  entreprise Int      @default(0)
  pid        Int
  number     String   @db.VarChar(50)
  message    String   @db.VarChar(256)
  read       Int      @default(0)
  resolve    Int      @default(0)
  deleted    Int      @default(0)
  date       DateTime @default(now()) @db.Timestamp(0)
  postal     Int?
  x          Float?   @db.Float
  y          Float?   @db.Float
  z          Float?   @db.Float
  returnCall Boolean? @default(true)
  note       String?  @db.MediumText

  @@index([entreprise], map: "21_phone_entreprise_entreprise_IDX")
  @@index([number], map: "21_phone_entreprise_number_IDX")
  @@index([pid], map: "21_phone_entreprise_pid_IDX")
  @@map("21_phone_entreprise")
}

model phone_game_score {
  id       Int     @id @default(autoincrement())
  playerId Int?
  game     String? @db.Char(255)
  name     String? @db.Char(255)
  score    Int?

  @@map("21_phone_game_score")
}

model phone_image {
  id       Int       @id @default(autoincrement())
  playerId Int?
  url      String?   @db.Char(255)
  time     DateTime? @default(now()) @db.Timestamp(0)
  deleted  Boolean?  @default(false)

  @@index([playerId], map: "21_phone_image_playerId_IDX")
  @@map("21_phone_image")
}

model phone_messages {
  id          Int      @id @default(autoincrement())
  transmitter String   @db.VarChar(20)
  receiver    String   @db.VarChar(20)
  message     String   @default("0") @db.VarChar(512)
  time        DateTime @default(now()) @db.Timestamp(0)
  isRead      Int      @default(0)
  owner       Int      @default(0)
  deleted     Int      @default(0)
  x           Float?   @db.Float
  y           Float?   @db.Float

  @@index([receiver], map: "receiver")
  @@index([transmitter], map: "transmitter")
  @@map("21_phone_messages")
}

model phone_news {
  id       Int       @id @default(autoincrement())
  playerID Int
  title    String?   @db.LongText
  content  String?   @db.LongText
  date     DateTime? @default(now()) @db.Timestamp(0)
  deleted  Boolean?  @default(false)
  type     String?   @default("news") @db.VarChar(50)
  link     String?   @db.LongText
  author   String?   @db.VarChar(50)

  @@map("21_phone_news")
}

model phone_settings {
  id          Int     @id @default(autoincrement())
  playerId    Int?
  background  String? @db.Char(255)
  widget      String? @db.Char(255)
  coque       String? @db.Char(255)
  showClock   String? @db.Char(255)
  zoom        String? @db.Char(255)
  showWeather String? @db.LongText

  @@index([playerId], map: "playerID")
  @@map("21_phone_settings")
}

model phone_spam {
  id      Int      @id @default(autoincrement())
  number  String?  @db.VarChar(255)
  message String?  @db.LongText
  deleted Boolean? @default(false)

  @@map("21_phone_spam")
}

model phone_users_contacts {
  id         Int      @id @default(autoincrement())
  identifier Int      @db.UnsignedInt
  number     String?  @db.VarChar(50)
  display    String   @db.VarChar(64)
  deleted    Boolean? @default(false)
  players    players  @relation(fields: [identifier], references: [playerID], onUpdate: Restrict, map: "21_phone_users_contacts_FK")

  @@index([number], map: "21_phone_users_contacts_FK_1")
  @@index([identifier], map: "identifier")
  @@map("21_phone_users_contacts")
}

model player_permis {
  id           Int       @id @default(autoincrement())
  permisID     Int
  playerID     Int
  permisPoints Int
  date         DateTime? @default(now()) @db.Timestamp(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  suspended_to DateTime? @db.Timestamp(0)

  @@unique([permisID, playerID], map: "permisID")
  @@map("21_player_permis")
}

model players {
  playerID                    Int                           @id @default(autoincrement()) @db.UnsignedInt
  steamID                     String?                       @db.VarChar(50)
  active                      Int                           @default(1)
  playerLastName              String                        @db.VarChar(50)
  playerFirstName             String                        @db.VarChar(50)
  playerBirthYear             Int                           @db.UnsignedInt
  playerBirthMonth            Int                           @db.UnsignedInt
  playerBirthDay              Int                           @db.UnsignedInt
  playerGender                String                        @db.VarChar(6)
  playerFatherFace            Int                           @db.UnsignedInt
  playerMotherFace            Int                           @db.UnsignedInt
  playerHeredityHead          Int                           @db.UnsignedInt
  playerHeredityBody          Int                           @db.UnsignedInt
  playerHairStyle             Int                           @db.UnsignedInt
  playerHairColor             Int                           @db.UnsignedInt
  playerHairHighlightColor    Int                           @db.UnsignedInt
  playerEyebrowsStyle         Int                           @db.UnsignedInt
  playerEyebrowsColor         Int                           @db.UnsignedInt
  playerEyesColor             Int                           @db.UnsignedInt
  playerBeardStyle            Int                           @db.UnsignedInt
  playerBeardColor            Int                           @db.UnsignedInt
  playerAgeingStyle           Int                           @db.UnsignedInt
  playerChestHairStyle        Int                           @db.UnsignedInt
  playerChestHairColor        Int                           @db.UnsignedInt
  makeUpStyle                 Int                           @default(255)
  makeUpType                  Int                           @default(0)
  makeUpColor1                Int                           @default(0)
  makeUpColor2                Int                           @default(0)
  paintStyle                  Int                           @default(255)
  paintType                   Int                           @default(0)
  paintColor1                 Int                           @default(0)
  paintColor2                 Int                           @default(0)
  lipStyle                    Int                           @default(255)
  lipType                     Int                           @default(0)
  lipColor1                   Int                           @default(0)
  lipColor2                   Int                           @default(0)
  stain6Style                 Int                           @default(255)
  stain7Style                 Int                           @default(255)
  stain9Style                 Int                           @default(255)
  stain0Style                 Int                           @default(255)
  stain11Style                Int                           @default(255)
  archived                    Boolean                       @default(false)
  createDate                  DateTime                      @default(now()) @db.Timestamp(0)
  updated_at                  DateTime                      @default(now()) @db.Timestamp(0)
  bot_vehicles_returns        bot_vehicles_returns[]
  crimi_npc                   crimi_npc[]
  log_crimi_npc_payement      log_crimi_npc_payement[]
  log_crimi_tasks_ammo        log_crimi_tasks_ammo[]
  log_crimi_tasks_ammunations log_crimi_tasks_ammunations[]
  log_crimi_tasks_appartments log_crimi_tasks_appartments[]
  log_crimi_tasks_banks       log_crimi_tasks_banks[]
  log_crimi_tasks_containers  log_crimi_tasks_containers[]
  log_crimi_tasks_crate       log_crimi_tasks_crate[]
  log_crimi_tasks_delivery    log_crimi_tasks_delivery[]
  log_crimi_tasks_fields      log_crimi_tasks_fields[]
  log_crimi_tasks_gardens     log_crimi_tasks_gardens[]
  log_crimi_tasks_gofast      log_crimi_tasks_gofast[]
  log_crimi_tasks_jewelery    log_crimi_tasks_jewelery[]
  log_crimi_tasks_laundry     log_crimi_tasks_laundry[]
  log_crimi_tasks_lockpick    log_crimi_tasks_lockpick[]
  log_crimi_tasks_markets     log_crimi_tasks_markets[]
  log_crimi_tasks_marketsafes log_crimi_tasks_marketsafes[]
  log_crimi_tasks_pharma      log_crimi_tasks_pharma[]
  log_crimi_tasks_recipes     log_crimi_tasks_recipes[]
  log_crimi_tasks_resale      log_crimi_tasks_resale[]
  log_crimi_tasks_sales       log_crimi_tasks_sales[]
  log_crimi_tasks_shops       log_crimi_tasks_shops[]
  log_crimi_tasks_vehlux      log_crimi_tasks_vehlux[]
  log_crimi_tasks_vehtraffic  log_crimi_tasks_vehtraffic[]
  messenger_group_player_link messenger_group_player_link[]
  messenger_groups            messenger_groups[]
  messenger_messages          messenger_messages[]
  parkings_places_players     parkings_places_players?
  contacts                    phone_users_contacts[]
  Accounts                    Accounts?                     @relation(fields: [steamID], references: [SteamId], onDelete: Restrict, onUpdate: Restrict, map: "21_players_FK")
  phoneNumber                 td_phone?

  @@index([playerID], map: "playerID")
  @@index([steamID], map: "steamID")
  @@map("21_players")
}

model players_disabilities {
  id         Int       @id @default(autoincrement())
  playerID   Int
  disability String    @db.VarChar(255)
  active     Int       @default(1) @db.TinyInt
  createAt   DateTime  @default(now()) @db.DateTime(0)
  createdBy  String    @db.VarChar(255)
  removeAt   DateTime? @db.DateTime(0)
  removedBy  String?   @db.VarChar(255)

  @@map("21_players_disabilities")
}

model players_props {
  styleID Int    @db.UnsignedInt
  propID  Int    @db.UnsignedInt
  name    String @db.VarChar(30)
  style   Int    @db.UnsignedInt
  color   Int    @db.UnsignedInt

  @@id([styleID, propID, name])
  @@map("21_players_props")
}

model players_spawn {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  playerID   Int       @unique(map: "21_players_spawn_playerID_IDX") @default(0)
  x          Float     @db.Float
  y          Float     @db.Float
  z          Float     @db.Float
  h          Float     @db.Float
  life       Int       @default(200)
  armor      Int       @default(0)
  food       Int       @default(100)
  water      Int       @default(100)
  alcool     Int       @default(0)
  drugs      Int       @default(0)
  appartID   Int?
  lastUpdate DateTime? @default(now()) @db.Timestamp(0)

  @@map("21_players_spawn")
}

model players_styles {
  id               Int    @id @default(autoincrement()) @db.UnsignedInt
  playerID         Int
  active           Int    @default(1) @db.UnsignedInt
  styleName        String @db.VarChar(50)
  gender           String @default("male") @db.VarChar(10)
  maskID           Int?   @db.UnsignedInt
  mask_texture     Int?   @db.UnsignedInt
  pantsID          Int?   @db.UnsignedInt
  pants_texture    Int?   @db.UnsignedInt
  bagID            Int?   @db.UnsignedInt
  bag_texture      Int?   @db.UnsignedInt
  shoesID          Int?   @db.UnsignedInt
  shoes_texture    Int?   @db.UnsignedInt
  neckID           Int?   @db.UnsignedInt
  neck_texture     Int?   @db.UnsignedInt
  undertopID       Int?   @db.UnsignedInt
  undertop_texture Int?   @db.UnsignedInt
  kevlarID         Int?   @db.UnsignedInt
  kevlar_texture   Int?   @db.UnsignedInt
  decalsID         Int?   @db.UnsignedInt
  decals_texture   Int?   @db.UnsignedInt
  topsID           Int?   @db.UnsignedInt
  tops_texture     Int?   @db.UnsignedInt
  mittID           Int?   @db.UnsignedInt
  mitt_texture     Int?   @db.UnsignedInt
  earsID           Int?   @db.UnsignedInt
  ears_texture     Int?   @db.UnsignedInt
  glassesID        Int?   @db.UnsignedInt
  glasses_texture  Int?   @db.UnsignedInt
  hatID            Int?   @db.UnsignedInt
  hat_texture      Int?   @db.UnsignedInt
  helmetID         Int?   @db.UnsignedInt
  helmet_texture   Int?   @db.UnsignedInt
  lcuffID          Int?   @db.UnsignedInt
  lcuff_texture    Int?   @db.UnsignedInt
  rcuffID          Int?   @db.UnsignedInt
  rcuff_texture    Int?   @db.UnsignedInt

  @@map("21_players_styles")
}

model players_styles_old {
  styleID       Int    @id @default(autoincrement()) @db.UnsignedInt
  playerID      Int
  defaultStyle  Int    @default(1) @db.UnsignedInt
  styleName     String @db.VarChar(100)
  style_head    Int?   @map("1-style-head") @db.UnsignedInt
  color_head    Int?   @map("1-color-head") @db.UnsignedInt
  style_tshirt1 Int?   @map("3-style-tshirt1") @db.UnsignedInt
  color_tshirt1 Int?   @map("3-color-tshirt1") @db.UnsignedInt
  style_legs    Int?   @map("4-style-legs") @db.UnsignedInt
  color_legs    Int?   @map("4-color-legs") @db.UnsignedInt
  style_bag     Int?   @map("5-style-bag") @db.UnsignedInt
  color_bag     Int?   @map("5-color-bag") @db.UnsignedInt
  style_feet    Int?   @map("6-style-feet") @db.UnsignedInt
  color_feet    Int?   @map("6-color-feet") @db.UnsignedInt
  style_neck    Int?   @map("7-style-neck") @db.UnsignedInt
  color_neck    Int?   @map("7-color-neck") @db.UnsignedInt
  style_tshirt2 Int?   @map("8-style-tshirt2") @db.UnsignedInt
  color_tshirt2 Int?   @map("8-color-tshirt2") @db.UnsignedInt
  style_vest    Int?   @map("9-style-vest") @db.UnsignedInt
  color_vest    Int?   @map("9-color-vest") @db.UnsignedInt
  style_text    Int?   @map("10-style-text") @db.UnsignedInt
  color_text    Int?   @map("10-color-text") @db.UnsignedInt
  style_tshirt3 Int?   @map("11-style-tshirt3") @db.UnsignedInt
  color_tshirt3 Int?   @map("11-color-tshirt3") @db.UnsignedInt
  mitt_style    Int?   @map("mitt-style") @db.UnsignedInt
  mitt_color    Int?   @map("mitt-color") @db.UnsignedInt

  @@map("21_players_styles_old")
}

model pos_veh_vol {
  id   Int    @id @default(autoincrement())
  type String @db.VarChar(50)
  x    Float  @db.Float
  y    Float  @db.Float
  z    Float  @db.Float

  @@map("21_pos_veh_vol")
}

model posboutique {
  boutiqueID              Int                       @id @default(autoincrement())
  boutiqueName            String                    @db.VarChar(50)
  boutiqueType            String                    @db.VarChar(25)
  x                       Float                     @db.Float
  y                       Float                     @db.Float
  z                       Float                     @db.Float
  head                    Float                     @db.Float
  vente                   Int                       @default(0)
  hide                    Int                       @default(0)
  entrepriseID            Int                       @default(0)
  police                  String?                   @db.VarChar(25)
  log_crimi_tasks_markets log_crimi_tasks_markets[]
  log_crimi_tasks_pharma  log_crimi_tasks_pharma[]

  @@map("21_posboutique")
}

model position_braquage {
  id   Int    @id @default(autoincrement())
  type String @db.VarChar(50)
  x    Float  @db.Float
  y    Float  @db.Float
  z    Float  @db.Float

  @@map("21_position_braquage")
}

model position_coffre {
  id           Int   @id @default(autoincrement())
  idEntreprise Int
  x            Float @db.Float
  y            Float @db.Float
  z            Float @db.Float

  @@map("21_position_coffre")
}

model position_dressing {
  id           Int   @id @default(autoincrement())
  x            Float @db.Float
  y            Float @db.Float
  z            Float @db.Float
  head         Float @db.Float
  entrepriseID Int?  @default(0)
  appartID     Int   @default(0)

  @@map("21_position_dressing")
}

model position_farm_garage {
  id Int   @id @default(autoincrement())
  x  Float @db.Float
  y  Float @db.Float
  z  Float @db.Float

  @@map("21_position_farm_garage")
}

model position_gofast {
  id   Int     @id @default(autoincrement()) @db.UnsignedInt
  x    Float   @db.Float
  y    Float   @db.Float
  z    Float   @db.Float
  type String? @db.VarChar(50)
  h    Float?  @db.Float
  ped  String? @db.VarChar(250)

  @@map("21_position_gofast")
}

model position_largage {
  id   Int     @id @default(autoincrement())
  x    Float   @db.Float
  y    Float   @db.Float
  z    Float   @db.Float
  type String? @db.VarChar(50)

  @@map("21_position_largage")
}

model position_livraison {
  id   Int     @id @default(autoincrement())
  x    Float   @db.Float
  y    Float   @db.Float
  z    Float   @db.Float
  type String? @db.VarChar(50)

  @@map("21_position_livraison")
}

model position_ordinateur {
  id Int   @id @default(autoincrement())
  x  Float @db.Float
  y  Float @db.Float
  z  Float @db.Float

  @@map("21_position_ordinateur")
}

model position_peche {
  id      Int    @id @default(autoincrement())
  x       Float  @db.Float
  y       Float  @db.Float
  z       Float  @db.Float
  disable Int    @default(0)
  name    String @db.VarChar(50)

  @@map("21_position_peche")
}

model position_permis {
  id   Int     @id @default(autoincrement())
  x    Float?  @db.Float
  y    Float?  @db.Float
  z    Float?  @db.Float
  name String? @db.VarChar(50)

  @@map("21_position_permis")
}

model position_radar {
  id               Int     @id @default(autoincrement())
  identifiant      String  @db.VarChar(50)
  ObjX             Float   @db.Float
  ObjY             Float   @db.Float
  ObjZ             Float   @db.Float
  ObjH             Float   @db.Float
  RadX             Float   @db.Float
  RadY             Float   @db.Float
  RadZ             Float   @db.Float
  rayon            Int     @db.UnsignedInt
  vMax             Int     @db.UnsignedInt
  active           Boolean @default(false)
  paidEntrepriseID Int     @default(4) @db.UnsignedInt

  @@map("21_position_radar")
}

model position_servicezone {
  id           Int   @id @default(autoincrement())
  idEntreprise Int
  x            Float @db.Float
  y            Float @db.Float
  z            Float @db.Float

  @@map("21_position_servicezone")
}

model races {
  id           Int       @id @default(autoincrement())
  name         String    @db.VarChar(50)
  x            Float     @db.Float
  y            Float     @db.Float
  z            Float     @db.Float
  h            Float     @db.Float
  tpWhenOut    Int       @default(1)
  tpWhenFinish Int       @default(1)
  vehicles     String?   @db.VarChar(255)
  active       Int       @default(1)
  laps         Int       @default(1) @db.UnsignedInt
  startDate    DateTime? @db.Timestamp(0)
  endDate      DateTime? @db.Timestamp(0)

  @@map("21_races")
}

model races_results {
  id           Int      @id @default(autoincrement())
  raceID       Int
  playerID     Int
  racekey      String?  @db.VarChar(255)
  raceTime     Int
  vehicleModel String?  @db.VarChar(255)
  vehicleClass Int?
  vehicleLabel String?  @db.VarChar(255)
  vehiclePlate String?  @db.VarChar(255)
  timestamp    DateTime @default(now()) @db.Timestamp(0)
  disable      Int      @default(0)

  @@map("21_races_results")
}

model races_results_laps {
  id           Int      @id @default(autoincrement())
  raceID       Int
  playerID     Int
  racekey      String?  @db.VarChar(255)
  lap          Int
  lapTime      Int
  vehicleModel String?  @db.VarChar(255)
  vehicleClass Int?
  vehicleLabel String?  @db.VarChar(255)
  vehiclePlate String?  @db.VarChar(255)
  timestamp    DateTime @default(now()) @db.Timestamp(0)
  disable      Int      @default(0)

  @@map("21_races_results_laps")
}

model races_teams {
  id      Int    @id @default(autoincrement())
  name    String @db.VarChar(50)
  members String @default("[]") @db.Text
  owner   Int    @default(0)

  @@map("21_races_teams")
}

model races_vehicles {
  id             Int     @id @default(autoincrement())
  name           String  @db.VarChar(50)
  model          String  @db.VarChar(50)
  mods           String  @db.Text
  wheelType      Int?
  randomStickers Boolean
  randomRGB      Boolean
  vehicleID      Int     @default(0)
  active         Boolean @default(true)

  @@map("21_races_vehicles")
}

model races_waypoints {
  id     Int     @id @default(autoincrement())
  raceID Int
  x      Float   @db.Float
  y      Float   @db.Float
  z      Float   @db.Float
  h      Float   @db.Float
  active Boolean @default(true)

  @@map("21_races_waypoints")
}

model radars_config {
  id     Int  @id @default(autoincrement()) @db.UnsignedInt
  diff   Int? @db.UnsignedInt
  price  Int? @db.UnsignedInt
  points Int? @db.UnsignedInt

  @@map("21_radars_config")
}

model radars_pos {
  id          Int          @id @default(autoincrement()) @db.UnsignedInt
  name        String       @db.VarChar(255)
  objX        Float        @db.Float
  objY        Float        @db.Float
  objZ        Float        @db.Float
  objH        Float        @db.Float
  radX        Float        @db.Float
  radY        Float        @db.Float
  radZ        Float        @db.Float
  radius      Float        @db.Float
  maxSpeed    Int
  active      Boolean
  district    Int?
  tagged      Boolean      @default(false)
  tagged_at   DateTime     @default(now()) @db.Timestamp(0)
  entreprises entreprises? @relation(fields: [district], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_radars_pos_FK")

  @@index([district], map: "21_radars_pos_FK")
  @@map("21_radars_pos")
}

model recette {
  id             Int    @id @default(autoincrement())
  item1          Int
  nbrItem1       Int
  item2          Int    @default(0)
  nbrItem2       Int    @default(0)
  item3          Int    @default(0)
  nbrItem3       Int    @default(0)
  itemTransfo    Int
  nbrItemTransfo Int
  time           Int
  entrepriseID   String @db.VarChar(50)
  nomItem        String @db.VarChar(50)
  name           String @db.VarChar(100)

  @@map("21_recette")
}

model recette_category {
  id    Int     @id @default(autoincrement()) @db.UnsignedInt
  name  String? @db.VarChar(50)
  image String? @db.VarChar(50)
  order Int?

  @@map("21_recette_category")
}

model recipes {
  id                          Int                           @id @default(autoincrement()) @db.UnsignedInt
  itemP                       Int?
  quantityP                   Int?
  items                       String                        @db.Text
  entrepriseID                Int?
  categorieID                 Int?
  time                        Int?
  outType                     String                        @default("item") @db.VarChar(100)
  weaponP                     Int?
  delay                       Int                           @default(0)
  maxQuantity                 Int                           @default(0)
  crimeBusiness               String?                       @db.VarChar(100)
  crimeBusinessSpec           String?                       @db.VarChar(100)
  crimi_config_weapons_crafts crimi_config_weapons_crafts[]
  log_crimi_tasks_recipes     log_crimi_tasks_recipes[]

  @@map("21_recipes")
}

model seizures {
  id                   Int     @id @default(autoincrement())
  entrepriseID         Int
  weaponDestroy        String? @db.VarChar(255)
  itemIDDestroy        Int?
  timeToDestroy        Int
  generateBin          Float   @default(0) @db.Float
  generateItemID       Int     @default(0)
  generateItemQuantity Int     @default(0)

  @@map("21_seizures")
}

model seizures_pos {
  id           Int    @id @default(autoincrement())
  entrepriseID Int
  x            Float
  y            Float
  z            Float
  active       Int    @default(1) @db.TinyInt
  type         String @default("item") @db.VarChar(255)

  @@map("21_seizures_pos")
}

model service_horodatage {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  serverID   Int?      @db.UnsignedInt
  playerID   Int?
  horodatage DateTime? @default(now()) @db.DateTime(0)
  status     String    @db.VarChar(255)

  @@map("21_service_horodatage")
}

model shop {
  id       Int      @id @default(autoincrement())
  name     String?  @db.VarChar(100)
  shopType Int      @default(0)
  x        Float    @db.Float
  y        Float    @db.Float
  z        Float    @db.Float
  head     Float    @db.Float
  isAdmin  Boolean? @default(false)
  hide     Boolean? @default(false)

  @@map("21_shop")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shop_components {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(100)
  shopTypeID  String  @default("0") @db.VarChar(100)
  componentID Int
  drawableID  Int
  colors      String? @db.VarChar(100)
  torse       String? @db.VarChar(55)
  undertopId  String? @db.LongText
  price       Int
  gender      String  @default("male") @db.VarChar(10)
  category    String  @db.VarChar(100)
  type        String  @db.VarChar(100)

  @@map("21_shop_components")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shop_components_copy {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(100)
  shopTypeID  String  @default("0") @db.VarChar(100)
  componentID Int
  drawableID  Int
  colors      String? @db.VarChar(100)
  torse       String? @db.VarChar(55)
  undertopId  String? @db.LongText
  price       Int
  gender      String  @default("male") @db.VarChar(10)
  category    String  @db.VarChar(100)
  type        String  @db.VarChar(100)

  @@map("21_shop_components_copy")
}

model shop_copy {
  id       Int      @id @default(autoincrement())
  name     String?  @db.VarChar(100)
  shopType Int      @default(0)
  x        Float    @db.Float
  y        Float    @db.Float
  z        Float    @db.Float
  head     Float    @db.Float
  isAdmin  Boolean? @default(false)
  hide     Boolean? @default(false)

  @@map("21_shop_copy")
}

model shop_mitts {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(100)
  gender      String  @default("male") @db.VarChar(50)
  shopTypeID  String  @default("0") @db.VarChar(100)
  price       Int     @default(0)
  colors      String? @db.VarChar(100)
  torseType1  Int?
  torseType2  Int?
  torseType3  Int?
  torseType4  Int?
  torseType5  Int?
  torseType6  Int?
  torseType7  Int?
  torseType8  Int?
  torseType9  Int?
  torseType10 Int?
  torseType11 Int?
  torseType12 Int?
  torseType13 Int?
  torseType14 Int?
  torseType15 Int?
  torseType16 Int?

  @@map("21_shop_mitts")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shop_props {
  id         Int     @id @default(autoincrement())
  name       String  @db.VarChar(100)
  shopTypeID String  @default("0") @db.VarChar(100)
  propID     Int
  drawableID Int
  colors     String? @db.VarChar(100)
  price      Int
  gender     String  @default("male") @db.VarChar(10)
  category   String  @db.VarChar(100)
  type       String  @db.VarChar(100)

  @@map("21_shop_props")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model shop_props_copy {
  id         Int     @id @default(autoincrement())
  name       String  @db.VarChar(100)
  shopTypeID String  @default("0") @db.VarChar(100)
  propID     Int
  drawableID Int
  colors     String? @db.VarChar(100)
  price      Int
  gender     String  @default("male") @db.VarChar(10)
  category   String  @db.VarChar(100)
  type       String  @db.VarChar(100)

  @@map("21_shop_props_copy")
}

model sorter_bank {
  id Int   @id @default(autoincrement()) @db.UnsignedInt
  x  Float @db.Float
  y  Float @db.Float
  z  Float @db.Float
  h  Float @db.Float

  @@map("21_sorter_bank")
}

model stereo_radio {
  id   Int    @id @default(autoincrement()) @db.UnsignedInt
  name String @db.VarChar(255)
  url  String @db.VarChar(255)

  @@map("21_stereo_radio")
}

model stereo_speaker {
  id      Int    @id @default(autoincrement()) @db.UnsignedInt
  name    String @db.VarChar(255)
  x       Float  @db.Float
  y       Float  @db.Float
  z       Float  @db.Float
  radioID Int    @db.UnsignedInt
  volume  Float  @db.Float
  active  Int    @default(0) @db.TinyInt

  @@map("21_stereo_speaker")
}

model stream_ban {
  id                   Int       @id @unique(map: "21_stream_ban_id_uindex") @default(autoincrement())
  twitchName           String?   @db.VarChar(255)
  twitchId             String?   @db.VarChar(255)
  twitchChannel        String?   @db.VarChar(255)
  imageLink            String?   @db.VarChar(255)
  reason               String?   @db.LongText
  declareBy            String?   @db.VarChar(255)
  isPlayer             Boolean?  @default(false)
  updated_at           DateTime? @default(now()) @db.Timestamp(0)
  created_at           DateTime? @default(now()) @db.Timestamp(0)
  deleted              Boolean?  @default(false)
  messageDeclarationId String?   @db.VarChar(255)
  link                 String?   @db.VarChar(255)

  @@map("21_stream_ban")
}

model streamer {
  id           Int      @id @default(autoincrement())
  discordId    String   @unique(map: "21_streamer_discordId_uindex") @db.VarChar(255)
  isValidated  Boolean? @default(false)
  validatedBy  String?  @db.VarChar(255)
  modoIds      String?  @db.LongText
  modoRoleId   String?  @db.VarChar(255)
  deleted      Boolean? @default(false)
  created_at   DateTime @default(now()) @db.Timestamp(0)
  updated_at   DateTime @default(now()) @db.Timestamp(0)
  onlineSubId  String?  @db.VarChar(255)
  offlineSubId String?  @db.VarChar(255)

  @@map("21_streamer")
}

model tablet_applications {
  id                Int          @id @default(autoincrement())
  entrepriseID      Int?
  active            Boolean      @default(true)
  entrepriseType    String?      @db.VarChar(10)
  entrepriseSubType String?      @db.VarChar(10)
  name              String       @default("") @db.VarChar(50)
  route             String       @default("") @db.VarChar(50)
  entreprises       entreprises? @relation(fields: [entrepriseID], references: [entrepriseID], onDelete: Restrict, onUpdate: Restrict, map: "21_tablet_applications_fk_entreprise")

  @@index([entrepriseID], map: "21_tablet_applications_fk_entreprise")
  @@map("21_tablet_applications")
}

model tattoos {
  tattoosID Int    @id @default(autoincrement())
  playerID  Int
  tattoos   String @db.MediumText

  @@map("21_tattoos")
}

model tattoos_datas {
  id             Int     @id @default(autoincrement()) @db.UnsignedInt
  gender         String? @db.VarChar(50)
  zone           String? @db.VarChar(50)
  subZone        String  @default("default") @db.VarChar(50)
  collectionName String? @db.VarChar(255)
  hash           String? @db.VarChar(100)
  name           String? @db.VarChar(255)
  price          Int
  active         Boolean @default(true)

  @@map("21_tattoos_datas")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model taxiambu_stats {
  playerID    Int?
  price       Int?
  km          Float?   @db.Float
  missionTime Float?   @db.Float
  date        DateTime @default(now()) @db.Timestamp(0)

  @@map("21_taxiambu_stats")
  @@ignore
}

model td_phone {
  id           Int      @id @default(autoincrement()) @db.UnsignedInt
  identifier   Int?     @unique(map: "21_td_phone_identifier_IDX") @db.UnsignedInt
  phone_number String   @unique(map: "21_td_phone_phone_number_IDX") @db.VarChar(50)
  players      players? @relation(fields: [identifier], references: [playerID], onDelete: Restrict, onUpdate: Restrict, map: "21_td_phone_FK")

  @@map("21_td_phone")
}

model transfo_position {
  id           Int     @id @default(autoincrement())
  x            Float   @db.Float
  y            Float   @db.Float
  z            Float   @db.Float
  entrepriseID Int
  active       Boolean @default(true)

  @@map("21_transfo_position")
}

model trash {
  entrepriseID    Int     @id
  x               Float   @db.Float
  y               Float   @db.Float
  z               Float   @db.Float
  heading         Float   @db.Float
  currentQuantity Float   @db.Float
  maxQuantity     Float   @db.Float
  prop            String? @db.VarChar(255)

  @@map("21_trash")
}

model trash_config {
  id         Int   @id @default(autoincrement()) @db.UnsignedInt
  itemID     Int?
  trashCount Float @db.Float

  @@map("21_trash_config")
}

model typeboutique {
  id          Int     @id @default(autoincrement())
  type        String  @unique(map: "type") @db.VarChar(50)
  items       String  @db.MediumText
  active      Int     @default(1)
  category    String  @db.VarChar(50)
  submenuName String? @db.VarChar(100)
  roleAccess  String? @default("[]") @db.VarChar(255)
  itemsVente  String? @default("[]") @db.MediumText

  @@map("21_typeboutique")
}

model unif_licences {
  id         Int      @id @default(autoincrement())
  name       String?  @db.VarChar(255)
  deleted    Boolean? @default(false)
  wrongAllow Int?     @default(2)
  price      Int?     @default(100)

  @@map("21_unif_licences")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model unif_questions {
  id        Int      @id @default(autoincrement())
  idLicence Int
  label     String?  @db.VarChar(255)
  answers   String   @db.LongText
  deleted   Boolean? @default(false)
  time      Int?     @default(15)

  @@map("21_unif_questions")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model unif_results {
  id        Int      @id @default(autoincrement())
  playerID  Int
  idLicence Int
  success   Boolean  @default(false)
  answers   String   @db.LongText
  time      DateTime @default(now()) @db.Timestamp(0)

  @@map("21_unif_results")
}

model uniforms {
  id           Int     @id @default(autoincrement()) @db.UnsignedInt
  name         String  @db.VarChar(50)
  gender       String  @db.VarChar(6)
  hat          String? @db.VarChar(50)
  helmet       String? @db.VarChar(50)
  props        String? @db.VarChar(200)
  components   String  @db.VarChar(500)
  mitt         String? @db.VarChar(50)
  entrepriseID Int
  categoryID   Int
  deleted      Boolean @default(false)

  @@map("21_uniforms")
}

model uniforms_accessories {
  id         Int     @id @default(autoincrement()) @db.UnsignedInt
  name       String  @db.VarChar(50)
  gender     String  @db.VarChar(10)
  hat        String? @db.VarChar(50)
  helmet     String? @db.VarChar(50)
  props      String? @db.VarChar(50)
  components String? @db.VarChar(50)
  mitt       String? @db.VarChar(50)
  category   String  @db.VarChar(100)
  color      Int     @db.UnsignedInt

  @@map("21_uniforms_accessories")
}

model uniforms_accessories_entreprises {
  id           Int     @id @default(autoincrement())
  entrepriseID Int
  accessorieID Int
  color        Int     @default(0)
  type         String  @default("props") @db.VarChar(100)
  gender       String? @default("male") @db.VarChar(100)
  name         String  @default("no name") @db.VarChar(100)

  @@map("21_uniforms_accessories_entreprises")
}

model uniforms_accessories_entreprises_bak {
  entrepriseID Int
  accessorieID Int

  @@id([entrepriseID, accessorieID])
  @@map("21_uniforms_accessories_entreprises_bak")
}

model uniforms_bak {
  id           Int     @id @default(autoincrement()) @db.UnsignedInt
  name         String  @db.VarChar(50)
  gender       String  @db.VarChar(6)
  hat          String? @db.VarChar(50)
  helmet       String? @db.VarChar(50)
  props        String? @db.VarChar(200)
  components   String  @db.VarChar(500)
  mitt         String? @db.VarChar(50)
  entrepriseID Int
  categoryID   Int
  deleted      Boolean @default(false)

  @@map("21_uniforms_bak")
}

model uniforms_categories {
  id           Int    @id @default(autoincrement())
  name         String @default("") @db.VarChar(50)
  entrepriseID Int    @default(0)

  @@map("21_uniforms_categories")
}

model uniforms_gang {
  id           Int     @id @default(autoincrement()) @db.UnsignedInt
  name         String  @db.VarChar(50)
  gender       String  @db.VarChar(6)
  hat          String? @db.VarChar(50)
  helmet       String? @db.VarChar(50)
  props        String? @db.VarChar(200)
  components   String  @db.VarChar(500)
  mitt         String? @db.VarChar(50)
  entrepriseID Int
  categoryID   Int
  deleted      Boolean @default(false)

  @@map("21_uniforms_gang")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user_phonelist {
  owner_id   String @db.VarChar(50)
  contact_id String @db.VarChar(50)

  @@map("21_user_phonelist")
  @@ignore
}

model utils_zone {
  id     Int     @id @default(autoincrement())
  name   String? @db.VarChar(50)
  type   String? @db.VarChar(50)
  filtre String? @db.LongText

  @@map("21_utils_zone")
}

model utils_zone_coords {
  id     Int   @id @default(autoincrement())
  zoneId Int
  order  Int
  x      Float @db.Float
  y      Float @db.Float
  z      Float @db.Float

  @@map("21_utils_zone_coords")
}

model vehicles {
  vehicleID             Int                    @id @default(autoincrement())
  name                  String                 @db.VarChar(100)
  garage_id             Int                    @default(0)
  plateText             String                 @db.VarChar(50)
  plateType             String                 @default("3") @db.VarChar(50)
  windowTint            String                 @default("-1") @db.VarChar(50)
  primaryColour         String                 @default("112") @db.VarChar(50)
  secondaryColour       String                 @default("112") @db.VarChar(50)
  pearlColour           String                 @default("0") @db.VarChar(50)
  custPrimaryColour     String                 @default("[]") @db.VarChar(50)
  custSecondaryColour   String                 @default("[]") @db.VarChar(50)
  mod1Colour            String                 @default("[0,0,0]") @db.VarChar(50)
  mod2Colour            String                 @default("[0,0]") @db.VarChar(50)
  model                 String                 @db.VarChar(50)
  smokeColour           String                 @default("[255,255,255]") @db.VarChar(50)
  neonColour            String                 @default("[0,0,0]") @db.VarChar(50)
  burstableTyres        String                 @default("1") @db.VarChar(50)
  wheelType             String                 @default("5") @db.VarChar(50)
  livery                String                 @default("-1") @db.VarChar(50)
  extras                String                 @default("[1,2,3,4,5]") @db.VarChar(50)
  mods                  String                 @default("{\"1\":-1,\"2\":-1,\"3\":-1,\"4\":-1,\"5\":-1,\"6\":-1,\"7\":-1,\"8\":-1,\"9\":-1,\"10\":-1,\"11\":-1,\"12\":-1,\"13\":-1,\"14\":-1,\"15\":-1,\"16\":-1,\"17\":false,\"18\":false,\"19\":false,\"20\":false,\"21\":false,\"22\":false,\"23\":-1,\"24\":-1,\"25\":-1,\"26\":-1,\"27\":-1,\"28\":-1,\"29\":-1,\"30\":-1,\"31\":-1,\"32\":-1,\"33\":-1,\"34\":-1,\"35\":-1,\"36\":-1,\"37\":-1,\"38\":-1,\"39\":-1,\"40\":-1,\"41\":-1,\"42\":-1,\"43\":-1,\"44\":-1,\"45\":-1,\"46\":-1,\"47\":-1,\"48\":-1,\"49\":-1,\"0\":-1}") @db.MediumText
  neonToggles           String                 @default("[]") @db.VarChar(50)
  customTyres           String                 @default("0") @db.VarChar(50)
  wheelColour           String                 @default("156") @db.VarChar(50)
  interiorColor         Int                    @default(0)
  dashboardColor        Int                    @default(0)
  colorHeadLights       Int                    @default(-1)
  colorHeadLightsCustom String?                @db.MediumText
  colorTyre             String?                @db.MediumText
  net_id                String                 @default("0") @db.VarChar(50)
  timestamp             DateTime               @default(now()) @db.Timestamp(0)
  fuel                  Float                  @default(40.0000000) @db.Float
  dirt_level            Float                  @default(0.0000000) @db.Float
  degat                 String?                @db.MediumText
  vehHeal               String                 @default("{\"petrol\":1000.0,\"body\":1000.0,\"engine\":1000.0,\"heal\":1000}") @db.MediumText
  playerID              Int?                   @default(0)
  lastPlayerID          Int                    @default(0)
  prixAchat             Int                    @default(0)
  volee                 Int                    @default(0)
  disable               Int                    @default(0)
  entrepriseID          Int?
  type                  String                 @default("veh") @db.VarChar(10)
  releaseTime           DateTime               @default(now()) @db.Timestamp(0)
  buyDate               DateTime               @default(now()) @db.Timestamp(0)
  driftMode             Boolean                @default(false)
  bot_vehicles_returns  bot_vehicles_returns[]

  @@index([entrepriseID], map: "21_vehicles_entrepriseID_IDX")
  @@index([garage_id], map: "21_vehicles_garage_id_IDX")
  @@index([plateText], map: "21_vehicles_plateText_IDX")
  @@index([playerID], map: "21_vehicles_playerID_IDX")
  @@map("21_vehicles")
}

model vehicles_oldd {
  vehicleID             Int      @id @default(autoincrement())
  name                  String   @db.VarChar(100)
  garage_id             Int      @default(0)
  plateText             String   @db.VarChar(50)
  plateType             String   @db.VarChar(50)
  windowTint            String   @db.VarChar(50)
  primaryColour         String   @db.VarChar(50)
  secondaryColour       String   @db.VarChar(50)
  pearlColour           String   @db.VarChar(50)
  custPrimaryColour     String   @db.VarChar(50)
  custSecondaryColour   String   @db.VarChar(50)
  mod1Colour            String   @db.VarChar(50)
  mod2Colour            String   @db.VarChar(50)
  model                 String   @db.VarChar(50)
  smokeColour           String   @db.VarChar(50)
  neonColour            String   @db.VarChar(50)
  burstableTyres        String   @db.VarChar(50)
  wheelType             String   @db.VarChar(50)
  livery                String   @db.VarChar(50)
  extras                String   @db.VarChar(50)
  mods                  String   @db.MediumText
  neonToggles           String   @db.VarChar(50)
  customTyres           String   @db.VarChar(50)
  wheelColour           String   @db.VarChar(50)
  interiorColor         Int      @default(0)
  dashboardColor        Int      @default(0)
  colorHeadLights       Int      @default(-1)
  colorHeadLightsCustom String?  @db.MediumText
  colorTyre             String?  @db.MediumText
  net_id                String   @default("0") @db.VarChar(50)
  timestamp             DateTime @default(now()) @db.Timestamp(0)
  fuel                  Float    @default(40.0000000) @db.Float
  dirt_level            Float    @default(0.0000000) @db.Float
  degat                 String?  @db.MediumText
  vehHeal               String?  @db.MediumText
  playerID              Int?     @default(0)
  lastPlayerID          Int      @default(0)
  prixAchat             Int      @default(0)
  volee                 Int      @default(0)
  disable               Int      @default(0)
  entrepriseID          Int      @default(0)
  type                  String   @default("veh") @db.VarChar(10)
  releaseTime           DateTime @default(now()) @db.Timestamp(0)
  buyDate               DateTime @default(now()) @db.Timestamp(0)
  driftMode             Boolean  @default(false)

  @@index([entrepriseID], map: "21_vehicles_entrepriseID_IDX")
  @@index([garage_id], map: "21_vehicles_garage_id_IDX")
  @@index([plateText], map: "21_vehicles_plateText_IDX")
  @@index([playerID], map: "21_vehicles_playerID_IDX")
  @@map("21_vehicles.oldd")
}

model vehicles_loan {
  id        Int     @id @default(autoincrement()) @db.UnsignedInt
  name      String? @db.VarChar(255)
  model     String? @db.VarChar(50)
  price     Int     @default(0)
  posX      Float?  @db.Float
  posY      Float?  @db.Float
  posZ      Float?  @db.Float
  posH      Float?  @db.Float
  maxRadius Int     @default(100)
  active    Boolean @default(true)

  @@map("21_vehicles_loan")
}

model vehicles_log {
  id_sauvegarde         Int      @id @default(autoincrement())
  plateText             String   @db.VarChar(50)
  plateType             String   @db.VarChar(50)
  windowTint            String   @db.VarChar(50)
  primaryColour         String   @db.VarChar(50)
  secondaryColour       String   @db.VarChar(50)
  pearlColour           String   @db.VarChar(50)
  custPrimaryColour     String   @db.VarChar(50)
  custSecondaryColour   String   @db.VarChar(50)
  mod1Colour            String   @db.VarChar(50)
  mod2Colour            String   @db.VarChar(50)
  model                 String   @db.VarChar(50)
  smokeColour           String   @db.VarChar(50)
  neonColour            String   @db.VarChar(50)
  burstableTyres        String   @db.VarChar(50)
  wheelType             String   @db.VarChar(50)
  livery                String   @db.VarChar(50)
  extras                String   @db.VarChar(50)
  mods                  String   @db.MediumText
  neonToggles           String   @db.VarChar(50)
  customTyres           String   @db.VarChar(50)
  wheelColour           String   @db.VarChar(50)
  interiorColor         Int
  dashboardColor        Int
  colorHeadLights       Int
  colorHeadLightsCustom String?  @db.MediumText
  colorTyre             String?  @db.MediumText
  type                  String   @db.VarChar(10)
  etat                  String   @db.VarChar(50)
  time                  DateTime @default(now()) @db.Timestamp(0)
  playerIDUpdate        Int?

  @@index([plateText], map: "21_vehicles_log_plateText_IDX")
  @@index([playerIDUpdate], map: "21_vehicles_log_playerIDUpdate_IDX")
  @@map("21_vehicles_log")
}

model vehicles_releases {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  model       String?   @db.VarChar(255)
  timestamp   DateTime  @default(now()) @db.Timestamp(0)
  reason      String?   @db.VarChar(255)
  releaseDate DateTime? @db.Timestamp(0)
  released    Boolean   @default(false)

  @@map("21_vehicles_releases")
}

model vehicles_shops {
  id         Int     @id @default(autoincrement()) @db.UnsignedInt
  name       String? @db.VarChar(255)
  type       String? @db.VarChar(255)
  vehType    String? @db.VarChar(100)
  classes    String? @db.VarChar(255)
  x          Float?  @db.Float
  y          Float?  @db.Float
  z          Float?  @db.Float
  expoX      Float?  @db.Float
  expoY      Float?  @db.Float
  expoZ      Float?  @db.Float
  expoH      Float?  @db.Float
  blipID     Int?
  markerType Int?

  @@map("21_vehicles_shops")
}

model velib {
  id     Int   @id @default(autoincrement())
  posX   Float @db.Float
  posY   Float @db.Float
  posZ   Float @db.Float
  h      Float @db.Float
  active Int

  @@map("21_velib")
}

model voiture_civil {
  voitureID               Int                       @id @default(autoincrement()) @db.UnsignedInt
  realName                String?                   @db.VarChar(50)
  model                   String                    @unique(map: "model") @db.VarChar(50)
  hash                    Int                       @unique(map: "hash") @default(0)
  class                   Int                       @default(0)
  className               String                    @default("0") @db.Char(50)
  brandName               String?                   @db.VarChar(50)
  price                   Int                       @default(0)
  nbrDispo                Int                       @default(0)
  nbrVehAcht              Int                       @default(0) @db.UnsignedInt
  disable                 Int                       @default(0)
  isTruck                 Int                       @default(0) @db.TinyInt
  maxWeight               Float                     @default(0.0) @db.Float
  maxFuel                 Int                       @default(50)
  fuelType                String                    @default("essence") @db.VarChar(50)
  entrepriseID            String?                   @default("[]") @db.VarChar(100)
  shBlacklist             Int                       @default(0)
  thiefLevel              Int                       @default(0)
  crimi_config_vehtraffic crimi_config_vehtraffic[]

  @@map("21_voiture_civil")
}

model voiture_civil_old {
  voitureID         Int     @id @default(autoincrement())
  realName          String? @db.VarChar(50)
  model             String  @unique(map: "model") @db.VarChar(50)
  hash              Int     @default(0)
  class             Int     @default(0)
  className         String  @default("0") @db.Char(50)
  seatNum           Int     @default(0)
  estimateMaxSpeed  Float   @default(0) @db.Float
  maxAgility        Float?  @db.Float
  maxBraking        Float?  @db.Float
  maxTraction       Float?  @db.Float
  estimateMaxSpeed2 Float   @default(0) @db.Float
  gearNum           Int     @default(0)
  liveryCount       Int     @default(0)
  roofLiveryCount   Int     @default(0)
  petrolTankVolume  Float   @default(0) @db.Float
  displayName       String? @db.VarChar(50)
  brandName         String? @db.VarChar(50)
  price             Int
  nbrDispo          Int     @default(1)
  nbrVehAcht        Int     @default(0) @db.UnsignedInt
  disable           Int     @default(0)
  isTruck           Int?    @db.TinyInt
  maxWeight         Float   @default(0.0) @db.Float
  maxFuel           Int?
  shBlacklist       Int     @default(0)

  @@map("21_voiture_civil.old")
}

model vote {
  id       Int      @id @default(autoincrement())
  vote     Int
  SteamId  String   @db.VarChar(50)
  resultat Int
  time     DateTime @default(now()) @db.DateTime(0)

  @@map("21_vote")
}

model vote_candidats {
  id       Int     @id @default(autoincrement())
  id_vote  Int
  label    String  @db.VarChar(50)
  district String  @default("C") @db.VarChar(20)
  partis   String? @db.VarChar(50)

  @@map("21_vote_candidats")
}

model vote_config {
  id       Int      @id @default(autoincrement())
  date_deb DateTime @db.DateTime(0)
  date_fin DateTime @db.DateTime(0)
  label    String?  @db.VarChar(100)

  @@map("21_vote_config")
}

model vote_topserver {
  id         Int      @id @default(autoincrement())
  playerID   Int
  date       DateTime @default(now()) @db.Timestamp(0)
  playername String?  @db.VarChar(50)
  donnee     String?  @db.VarChar(200)
  ok         Int      @default(1)

  @@map("21_vote_topserver")
}

model waypoints_permis {
  id    Int   @id @default(autoincrement())
  x     Float @db.Float
  y     Float @db.Float
  z     Float @db.Float
  speed Int?
  type  Int?

  @@map("21_waypoints_permis")
}

model weapons {
  weaponID   Int    @id @default(autoincrement()) @db.UnsignedInt
  name       String @db.VarChar(255)
  hash       String @db.VarChar(255)
  ammoHash   String @default("0") @db.VarChar(255)
  ammo       Int    @default(0)
  armoryID   Int    @default(0) @db.UnsignedInt
  playerID   Int    @default(0) @db.UnsignedInt
  tint       Int    @default(0)
  components String @default("[]") @db.LongText

  @@map("21_weapons")
}

model weapons_armories_pos {
  armoryID     Int     @id @default(autoincrement()) @db.UnsignedInt
  x            Float   @db.Float
  y            Float   @db.Float
  z            Float   @db.Float
  entrepriseID String? @db.LongText
  appartID     Int     @default(0)
  maxWeight    Float?  @default(0) @db.Float

  @@map("21_weapons_armories_pos")
}

model weapons_list {
  id                          Int                           @id @default(autoincrement()) @db.UnsignedInt
  category                    String?                       @db.VarChar(100)
  name                        String                        @db.VarChar(255)
  ammoHash                    String                        @default("0") @db.VarChar(255)
  hash                        String                        @db.VarChar(255)
  components                  String                        @default("[]") @db.LongText
  slot                        Int                           @default(0) @db.UnsignedInt
  image                       String?                       @db.VarChar(255)
  weight                      Float                         @default(0) @db.Float
  backModel                   String?                       @db.VarChar(100)
  backDisplay                 Boolean                       @default(false)
  backRotation                String?                       @db.VarChar(255)
  backPosition                String?                       @db.VarChar(255)
  crimi_config_weapons        crimi_config_weapons[]
  crimi_config_weaponstraffic crimi_config_weaponstraffic[]

  @@map("21_weapons_list")
}

model weapons_stores {
  id            Int     @id @default(autoincrement()) @db.UnsignedInt
  weaponListID  Int     @db.UnsignedInt
  entrepriseID  Int     @default(0)
  licence       Boolean @default(false)
  permisID      Int     @default(0)
  price         Int     @db.UnsignedInt
  illegal_price Int     @db.UnsignedInt

  @@map("21_weapons_stores")
}

model weapons_stores_pos {
  storeID Int   @id @default(autoincrement()) @db.UnsignedInt
  x       Float @db.Float
  y       Float @db.Float
  z       Float @db.Float

  @@map("21_weapons_stores_pos")
}

model web_accounts_vacations {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  discordID    String    @db.VarChar(255)
  explanations String    @db.Text
  startDate    DateTime  @db.Date
  endDate      DateTime  @db.Date
  validatedBy  String?   @db.VarChar(255)
  status       Int       @default(0) @db.UnsignedTinyInt
  created_at   DateTime? @default(now()) @db.Timestamp(0)
  updated_at   DateTime? @default(now()) @db.Timestamp(0)

  @@map("21_web_accounts_vacations")
}

model web_agendas {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  entrepriseID  Int       @db.UnsignedInt
  title         String    @db.VarChar(255)
  datetimeStart DateTime? @db.Timestamp(0)
  datetimeEnd   DateTime? @db.Timestamp(0)
  createdBy     Int       @db.UnsignedInt
  lastUpdateBy  Int       @default(0) @db.UnsignedInt
  icon          String?   @db.VarChar(255)
  color         String?   @db.VarChar(255)
  remark        String?   @db.MediumText
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)

  @@map("21_web_agendas")
}

model web_apartments_taxes {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  idAppart   Int       @db.UnsignedInt
  playerID   Int       @db.UnsignedInt
  validateBy Int?      @db.UnsignedInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  @@map("21_web_apartments_taxes")
}

model web_characters_end_requests {
  id                    BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  playerID              Int       @db.UnsignedInt
  type                  String    @db.VarChar(255)
  characterExplanation  String?   @db.Text
  playerExplanation     String?   @db.Text
  friends               String?   @default("[]") @db.Text
  enemies               String?   @default("[]") @db.Text
  ongoingActions        Int       @default(0) @db.UnsignedTinyInt
  ongoingActionsDetails String?   @db.Text
  status                Int       @default(0) @db.UnsignedTinyInt
  staffRemark           String?   @default("") @db.Text
  validatedBy           Int?      @db.UnsignedInt
  closedBy              Int?      @db.UnsignedInt
  endDate               DateTime? @db.Timestamp(0)
  created_at            DateTime? @db.Timestamp(0)
  updated_at            DateTime? @db.Timestamp(0)

  @@map("21_web_characters_end_requests")
}

model web_charges {
  id       BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  type     String @db.VarChar(255)
  category String @db.VarChar(255)
  name     String @db.VarChar(255)

  @@map("21_web_charges")
}

model web_dispatch {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  presence_id  String    @db.VarChar(255)
  entrepriseID Int       @db.UnsignedInt
  zone_id      Int       @db.UnsignedInt
  vehicle_id   Int       @db.UnsignedInt
  callsign     Int       @db.UnsignedInt
  active       Boolean
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)

  @@map("21_web_dispatch")
}

model web_dispatch_presences {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  playerID     Int       @db.UnsignedInt
  entrepriseID Int       @db.UnsignedInt
  active       Boolean
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)

  @@map("21_web_dispatch_presences")
}

model web_dispatch_vehicles {
  id           BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  entrepriseID Int     @db.UnsignedInt
  name         String  @db.VarChar(255)
  isGroup      Boolean @default(false)
  isDefault    Boolean @default(false)
  active       Boolean @default(true)
  delete       Boolean @default(false)

  @@map("21_web_dispatch_vehicles")
}

model web_dispatch_zones {
  id           BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  entrepriseID Int     @db.UnsignedInt
  name         String  @db.VarChar(255)
  tablePos     Int?    @default(0) @db.TinyInt
  active       Boolean @default(true)
  delete       Boolean @default(false)

  @@map("21_web_dispatch_zones")
}

model web_documents {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title      String    @db.VarChar(255)
  link       String    @db.Text
  visibleBy  String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  @@map("21_web_documents")
}

model web_ems_body_parts {
  id        BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  groupName String  @db.VarChar(255)
  name      String? @db.VarChar(255)
  active    Boolean @default(true)

  @@map("21_web_ems_body_parts")
}

model web_ems_examinations {
  id     BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  name   String  @db.VarChar(255)
  active Boolean @default(true)

  @@map("21_web_ems_examinations")
}

model web_ems_injuries {
  id       BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  name     String  @db.VarChar(255)
  severity Int     @db.UnsignedTinyInt
  active   Boolean @default(true)

  @@map("21_web_ems_injuries")
}

model web_ems_medical_files {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  playerID          Int       @db.UnsignedInt
  phone             String?   @db.VarChar(8)
  mail              String?   @db.VarChar(255)
  status            Int?
  bloodgroup        String?   @db.VarChar(255)
  smoking           Boolean?
  background        String?   @db.Text
  allergies         String?   @db.Text
  drugs             String?   @db.Text
  medicalVisit      Boolean   @default(false)
  medicalVisitDate  DateTime? @db.Date
  bloodDonationDate DateTime? @db.Timestamp(0)
  ice               String    @default("[]") @db.Text
  remark            String?   @db.Text
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)

  @@index([phone], map: "21_web_ems_medical_files_phone_IDX")
  @@index([playerID], map: "21_web_ems_medical_files_playerID_IDX")
  @@map("21_web_ems_medical_files")
}

model web_ems_reports {
  id                 BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  type               String    @db.VarChar(255)
  zip                String    @db.VarChar(10)
  playerID           Int       @db.UnsignedInt
  emsPlayerID        Int       @db.UnsignedInt
  injuries           String    @default("[]") @db.MediumText
  examinations       String    @default("[]") @db.Text
  treatments         String    @default("[]") @db.Text
  injuriesText       String    @default("[]") @db.MediumText
  examinationsText   String    @default("[]") @db.MediumText
  treatmentsText     String    @default("[]") @db.MediumText
  disability         Boolean?
  disabilityDuration DateTime? @db.Time(0)
  admission          DateTime  @default(now()) @db.Timestamp(0)
  controlVisit       DateTime? @db.Timestamp(0)
  disabilities       String    @default("[]") @db.MediumText
  injuriesRemark     String?   @default("") @db.Text
  examinationsRemark String?   @default("") @db.Text
  treatmentsRemark   String?   @default("") @db.Text
  remark             String?   @default("") @db.Text
  created_at         DateTime  @default(now()) @db.Timestamp(0)
  updated_at         DateTime  @default(now()) @db.Timestamp(0)

  @@index([emsPlayerID], map: "21_web_ems_reports_emsPlayerID_IDX")
  @@index([playerID], map: "21_web_ems_reports_playerID_IDX")
  @@map("21_web_ems_reports")
}

model web_ems_treatments {
  id     BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  name   String  @db.VarChar(255)
  active Boolean @default(true)

  @@map("21_web_ems_treatments")
}

model web_ent_ben_custompricings {
  id             BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  shopType       String @db.VarChar(255)
  vehicleType    String @db.VarChar(255)
  customCategory String @db.VarChar(255)
  customType     String @db.VarChar(255)
  customTitle    String @db.VarChar(255)
  customLvl      Int?   @db.UnsignedInt
  fixPrice       Int?   @db.UnsignedInt
  percentPrice   Float?

  @@map("21_web_ent_ben_custompricings")
}

model web_ent_ben_itemspricings {
  id      BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  name    String? @db.VarChar(100)
  item_id Int?    @db.UnsignedInt
  pricing Int     @db.UnsignedInt

  @@map("21_web_ent_ben_itemspricings")
}

model web_ent_ben_repaircounters {
  id                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  playerID            Int       @db.UnsignedInt
  entrepriseID        Int       @default(0) @db.UnsignedInt
  vehicleEntrepriseID Int?      @default(0) @db.UnsignedInt
  vehicleName         String?   @db.VarChar(255)
  vehicleDriverName   String?   @db.VarChar(255)
  items               String    @db.Text
  amount              Int       @db.UnsignedInt
  created_at          DateTime? @db.Timestamp(0)
  updated_at          DateTime? @db.Timestamp(0)

  @@map("21_web_ent_ben_repaircounters")
}

model web_ent_ben_repairpricings {
  id          BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  shopType    String  @db.VarChar(100)
  vehicleType String  @db.VarChar(100)
  category    String? @db.VarChar(100)
  motor       Int     @default(0)
  body        Int     @default(0)
  tyres       Int     @default(0)
  checkOnly   Int     @default(0)

  @@map("21_web_ent_ben_repairpricings")
}

model web_ent_rep_itemspricings {
  id           BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  entrepriseID Int     @default(0) @db.UnsignedInt
  name         String? @db.VarChar(100)
  item_id      Int?    @db.UnsignedInt
  price        Int     @db.UnsignedInt
  label        String? @db.VarChar(100)
  pos          Int?    @db.UnsignedInt

  @@map("21_web_ent_rep_itemspricings")
}

model web_ent_rep_pricings {
  id              BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  entrepriseID    Int     @default(0) @db.UnsignedInt
  shopType        String  @db.VarChar(100)
  vehicleType     String  @db.VarChar(100)
  category        String? @db.VarChar(100)
  motor           Int     @default(0)
  body            Int     @default(0)
  tyres           Int     @default(0)
  checkOnly       Int     @default(0)
  extraMotor      Int     @default(0)
  extraBody       Int     @default(0)
  startExtraMotor Int     @default(1)
  startExtraBody  Int     @default(1)
  pricings        String? @db.LongText

  @@map("21_web_ent_rep_pricings")
}

model web_entreprises_modules_access {
  entrepriseID BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  access       String    @db.MediumText
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)

  @@map("21_web_entreprises_modules_access")
}

model web_entreprises_players_rights {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  playerID     Int       @default(0) @db.UnsignedInt
  entrepriseID Int       @default(0) @db.UnsignedInt
  rights       String    @db.LongText
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)

  @@index([entrepriseID], map: "entrepriseID")
  @@index([playerID], map: "playerID")
  @@map("21_web_entreprises_players_rights")
}

model web_entreprises_players_rights_templates {
  id           BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  entrepriseID Int    @default(0) @db.UnsignedInt
  rights       String @default("[]") @db.MediumText

  @@map("21_web_entreprises_players_rights_templates")
}

model web_entreprises_taxes {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  playerID     Int       @db.UnsignedInt
  entrepriseID Int       @db.UnsignedInt
  turnover     Int       @db.UnsignedInt
  charges      String    @db.LongText
  taxes        Int
  paid         Boolean   @default(false)
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)

  @@map("21_web_entreprises_taxes")
}

model web_files {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  folder_id     Int       @default(0)
  title         String    @db.VarChar(255)
  path          String    @db.VarChar(255)
  fileName      String    @db.VarChar(255)
  fileType      String    @db.VarChar(255)
  visibleByRank Int       @default(0) @db.UnsignedInt
  trainerOnly   Boolean   @default(false)
  uploadedBy    Int       @db.UnsignedInt
  published     Boolean   @default(true)
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)

  @@map("21_web_files")
}

model web_files_folders {
  id                      Int                 @id @default(autoincrement()) @db.UnsignedInt
  entrepriseID            Int                 @db.UnsignedInt
  label                   String              @db.VarChar(255)
  parent_id               Int?                @db.UnsignedInt
  deleted                 Int                 @default(0) @db.UnsignedInt
  created_at              DateTime?           @db.Timestamp(0)
  updated_at              DateTime?           @db.Timestamp(0)
  web_files_folders       web_files_folders?  @relation("web_files_foldersToweb_files_folders", fields: [parent_id], references: [id], onDelete: Cascade, map: "21_web_files_folders_ibfk_1")
  other_web_files_folders web_files_folders[] @relation("web_files_foldersToweb_files_folders")

  @@index([parent_id], map: "parent_id")
  @@map("21_web_files_folders")
}

model web_goods_taxes {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  playerID   Int       @db.UnsignedInt
  amount     Int?      @db.UnsignedInt
  goods      String?   @default("[]") @db.Text
  validateBy Int?      @db.UnsignedInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  @@map("21_web_goods_taxes")
}

model web_police_criminal_files {
  id                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  playerID            Int       @db.UnsignedInt
  phone               String?   @db.VarChar(255)
  mail                String?   @db.VarChar(255)
  picture             String?   @db.VarChar(255)
  wanted              Boolean   @default(false)
  jailEnd             DateTime? @default(now()) @db.DateTime(0)
  physicalDescription String?   @db.Text
  address             String?   @db.VarChar(255)
  remark              String?   @db.Text
  created_at          DateTime? @db.Timestamp(0)
  updated_at          DateTime? @db.Timestamp(0)

  @@map("21_web_police_criminal_files")
}

model web_police_fines {
  id                BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  category          String   @db.VarChar(255)
  title             String   @db.VarChar(255)
  fineAmountUnique  Int      @db.UnsignedInt
  fineAmoutMultiple Int      @default(0) @db.UnsignedInt
  cumulative        Boolean  @default(false)
  extraPenalty      String?  @db.VarChar(255)
  jailTime          DateTime @default(dbgenerated("('00:00:00')")) @db.Time(0)
  federalPrisonTime DateTime @default(dbgenerated("('00:00:00')")) @db.Time(0)
  sentenceRemission String?  @db.VarChar(255)
  active            Int      @default(1)

  @@map("21_web_police_fines")
}

model web_police_interventions {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  folderLabel String?   @db.VarChar(255)
  factsDate   DateTime  @db.DateTime(0)
  involved    String    @db.Text
  presences   String    @db.Text
  textReport  String    @db.LongText
  by          Int       @db.UnsignedInt
  status      Int       @db.UnsignedInt
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)

  @@map("21_web_police_interventions")
}

model web_police_reports {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  type           String    @db.VarChar(255)
  zip            String    @db.VarChar(5)
  playerID       Int       @db.UnsignedInt
  policePlayerID Int       @db.UnsignedInt
  fines          String?   @db.Text
  finesAmount    Int       @db.UnsignedInt
  warning        Int       @default(0) @db.UnsignedTinyInt
  remark         String?   @db.Text
  jailTime       DateTime? @default(dbgenerated("('00:00:00')")) @db.Time(0)
  federalTime    DateTime? @default(dbgenerated("('00:00:00')")) @db.Time(0)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@map("21_web_police_reports")
}

model web_police_seizures {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  playerID      Int       @db.UnsignedInt
  ownerPlayerID Int       @db.UnsignedInt
  itemID        Int       @default(0) @db.UnsignedInt
  itemCount     Int       @default(0) @db.UnsignedInt
  weaponName    String    @default("") @db.VarChar(255)
  vehPlate      String?   @db.VarChar(100)
  duration      String?   @default("00:00:00") @db.VarChar(10)
  location      String    @db.VarChar(255)
  status        Int       @default(0) @db.UnsignedInt
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)

  @@map("21_web_police_seizures")
}

model web_proc_cases {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String    @db.VarChar(255)
  type       String    @db.VarChar(255)
  status     Int       @db.UnsignedInt
  deleted    Int       @default(0) @db.UnsignedInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  @@map("21_web_proc_cases")
}

model web_proc_investigations {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  caseID      Int       @db.UnsignedInt
  folderLabel String?   @db.VarChar(50)
  factsDate   DateTime  @db.DateTime(0)
  involved    String    @db.Text
  textReport  String    @db.MediumText
  by          Int       @db.UnsignedInt
  status      Int       @db.UnsignedInt
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)

  @@map("21_web_proc_investigations")
}

model web_proc_testimonies {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  caseID            Int       @db.UnsignedInt
  by                Int       @db.UnsignedInt
  who               String    @db.VarChar(255)
  presences         String    @db.Text
  predefinedAnswers String    @db.MediumText
  customAnswers     String    @db.MediumText
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)

  @@map("21_web_proc_testimonies")
}

model web_proc_testimonies_questions {
  id       BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  category String? @db.VarChar(255)
  question String? @db.VarChar(255)
  answers  String  @db.MediumText
  status   Int?    @db.UnsignedInt

  @@map("21_web_proc_testimonies_questions")
}

model web_requests_rank {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  userID            Int       @db.UnsignedInt
  departmentID      Int       @db.UnsignedInt
  rank_id           Int       @db.UnsignedInt
  validation        Int?      @db.UnsignedInt
  validation_by     Int?      @db.UnsignedInt
  validation_remark String?   @db.Text
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)

  @@map("21_web_requests_rank")
}

model web_sh_garage_catalog {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  model          String    @db.VarChar(255)
  plate          String    @db.VarChar(255)
  color          String    @db.VarChar(255)
  engine         Int       @default(0) @db.UnsignedTinyInt
  brakes         Int       @default(0) @db.UnsignedTinyInt
  transmission   Int       @default(0) @db.UnsignedTinyInt
  suspension     Int       @default(0) @db.UnsignedInt
  turbo          Boolean   @default(false)
  armor          Int       @default(0) @db.UnsignedTinyInt
  price          Int       @default(0) @db.UnsignedInt
  sellerPlayerID Int       @default(0) @db.UnsignedInt
  status         Boolean   @default(false)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@map("21_web_sh_garage_catalog")
}

model web_taxes {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name            String    @db.VarChar(255)
  percent         Float     @db.Float
  minAmount       Int?      @db.UnsignedInt
  maxAmount       Int?      @db.UnsignedInt
  paymentDeadline Int       @default(0)
  type            String?   @db.VarChar(100)
  district        Int       @default(0)
  entrepriseID    Int       @default(0)
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)

  @@map("21_web_taxes")
}

model web_trainings {
  id                 BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  entrepriseID       Int       @db.UnsignedInt
  name               String    @db.VarChar(255)
  type               String?   @db.VarChar(100)
  requiredRankID     Int?      @db.UnsignedInt
  requiredForRankID  Int?      @db.UnsignedInt
  requiredRoleID     Int?      @db.UnsignedInt
  requiredForRoleID  Int?      @db.UnsignedInt
  requiredUnitID     Int       @default(0) @db.UnsignedInt
  duration           DateTime? @db.Time(0)
  locations          String?   @default("[]") @db.VarChar(255)
  icon               String?   @db.VarChar(255)
  color              String?   @db.VarChar(255)
  dispatchVisibility Boolean   @default(false)
  active             Boolean
  created_at         DateTime? @db.Timestamp(0)
  updated_at         DateTime? @db.Timestamp(0)

  @@index([entrepriseID], map: "21_web_trainings_entrepriseID_IDX")
  @@map("21_web_trainings")
}

model web_trainings_locations {
  id           BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  entrepriseID Int     @db.UnsignedInt
  name         String  @db.VarChar(255)
  room         String? @db.VarChar(255)
  zip          String? @db.VarChar(255)

  @@map("21_web_trainings_locations")
}

model web_trainings_planning_subscriptions {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  planningID Int       @db.UnsignedInt
  playerID   Int       @db.UnsignedInt
  presence   Int?      @db.UnsignedInt
  validation Int?      @db.UnsignedInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  @@index([planningID], map: "21_web_trainings_planning_subscriptions_planningID_IDX")
  @@index([playerID], map: "21_web_trainings_planning_subscriptions_playerID_IDX")
  @@map("21_web_trainings_planning_subscriptions")
}

model web_trainings_plannings {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  trainingID    BigInt    @db.UnsignedBigInt
  datetimeStart DateTime  @db.DateTime(0)
  datetimeEnd   DateTime? @db.DateTime(0)
  trainers      String    @db.Text
  notes         String?   @db.Text
  createdBy     Int       @db.UnsignedInt
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)

  @@index([trainingID], map: "21_web_trainings_plannings_trainingID_IDX")
  @@map("21_web_trainings_plannings")
}

model web_trainings_statuses {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  trainingID BigInt    @db.UnsignedBigInt
  playerID   Int       @db.UnsignedInt
  status     String    @db.VarChar(100)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  @@index([playerID], map: "21_web_trainings_statuses_playerID_IDX")
  @@index([trainingID], map: "21_web_trainings_statuses_trainingID_IDX")
  @@map("21_web_trainings_statuses")
}

model web_units {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  entrepriseID   Int       @db.UnsignedInt
  managerID      Int?      @db.UnsignedInt
  name           String    @db.VarChar(255)
  requiredRankID Int       @default(1)
  requiredRoleID Int?
  active         Boolean
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@map("21_web_units")
}

model web_units_members {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  unitID     Int       @db.UnsignedInt
  playerID   Int       @db.UnsignedInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  @@index([playerID], map: "21_web_units_members_playerID_IDX")
  @@index([unitID], map: "21_web_units_members_unitID_IDX")
  @@map("21_web_units_members")
}

model worldinteractions {
  id              Int     @id @default(autoincrement()) @db.UnsignedInt
  type            String? @db.VarChar(100)
  category        String? @db.VarChar(255)
  name            String? @db.VarChar(255)
  model           String? @unique(map: "model") @db.VarChar(255)
  itemID          Int     @default(0)
  options         String? @db.Text
  active          Boolean @default(true)
  playerProps     Boolean @default(false)
  playerPropsData String? @db.Text

  @@map("21_worldinteractions")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model arcade_marker {
  id         Int?
  arcadeType String? @db.VarChar(200)
  type       Int?
  x          Float   @db.Float
  y          Float   @db.Float
  z          Float   @db.Float
  r          Float   @db.Float
  g          Float   @db.Float
  b          Float   @db.Float
  a          Float   @db.Float

  @@map("21arcade_marker")
  @@ignore
}

model arcade_nazar {
  id       Int     @id @default(autoincrement()) @db.UnsignedInt
  sentence String  @db.Text
  day      Int?
  month    Int?
  year     Int?
  gender   String? @db.VarChar(100)

  @@map("21arcade_nazar")
}

model arcade_score {
  id         Int      @id @default(autoincrement())
  playerID   Int?     @db.UnsignedInt
  arcadeType String?  @db.VarChar(100)
  score      Int?
  duration   Int?
  datetime   DateTime @default(now()) @db.Timestamp(0)

  @@map("21arcade_score")
}

model archives_21_bank_cash_transactions {
  idBankCashTransaction Int      @id @default(autoincrement()) @db.UnsignedInt
  dateTransaction       DateTime @default(now()) @db.DateTime(0)
  idAccountDebit        Int?     @db.UnsignedInt
  idAccountCredit       Int?     @db.UnsignedInt
  amount                Int
  motif                 String   @default("") @db.VarChar(255)
  idPlayerFrom          Int?     @db.UnsignedInt
  idPlayerTo            Int?     @db.UnsignedInt
  postal                Int?     @default(0) @db.UnsignedInt
}

model archives_21_bank_transactions {
  idBankTransaction Int      @id @default(autoincrement()) @db.UnsignedInt
  dateTransaction   DateTime @default(now()) @db.DateTime(0)
  idAccountDebit    Int?     @db.UnsignedInt
  idAccountCredit   Int?     @db.UnsignedInt
  amount            Int
  motif             String   @default("") @db.VarChar(255)
  postal            Int?     @default(0) @db.UnsignedInt
}

model department_members {
  userID       Int     @unique(map: "userID")
  rankID       Int
  departmentID Int
  accepted     Boolean
  callsign     String  @default("") @db.VarChar(10)
}

model departments {
  id                  Int     @id @default(autoincrement())
  name                String  @db.VarChar(75)
  shortname           String  @db.VarChar(10)
  icon                String  @db.MediumText
  background          String  @db.MediumText
  wallpaper           String  @db.MediumText
  requiresApplication Boolean @default(false)
  hiring              Boolean @default(false)
  maxMembers          Int     @default(1) @db.UnsignedInt
  callsignFormat      String  @default("") @db.VarChar(10)
  radius              Float   @default(0) @db.Float
  posX                Float   @default(0) @db.Float
  posY                Float   @default(0) @db.Float
  posZ                Float   @default(0) @db.Float
}

model health_check_result_history_items {
  id                   BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  check_name           String    @db.VarChar(255)
  check_label          String    @db.VarChar(255)
  status               String    @db.VarChar(255)
  notification_message String?   @db.Text
  short_summary        String?   @db.VarChar(255)
  meta                 String    @db.LongText
  ended_at             DateTime  @default(now()) @db.Timestamp(0)
  batch                String    @db.Char(36)
  created_at           DateTime? @db.Timestamp(0)
  updated_at           DateTime? @db.Timestamp(0)

  @@index([batch], map: "health_check_result_history_items_batch_index")
  @@index([created_at], map: "health_check_result_history_items_created_at_index")
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  migration String @db.VarChar(255)
  batch     Int
}

model td_taxiambu {
  index      Int      @id @default(autoincrement())
  type       Int?
  id         Int?
  x          Float?   @db.Float
  y          Float?   @db.Float
  z          Float?   @db.Float
  pedmodel   String?  @db.VarChar(50)
  pedx       Float?   @db.Float
  pedy       Float?   @db.Float
  pedz       Float?   @db.Float
  pedhead    Float?   @db.Float
  km         Float?   @db.Float
  kmlimit    Float?   @db.Float
  price      Int?
  datakm     String?  @db.LongText
  name       String?  @db.VarChar(50)
  otherdata  String?  @db.LongText
  lastupdate DateTime @default(now()) @db.DateTime(0)

  @@unique([id, type], map: "id")
  @@index([type], map: "type")
}

model users {
  id        Int      @id @default(autoincrement())
  license   String?  @unique(map: "license") @db.VarChar(75)
  gameName  String?  @db.VarChar(75)
  isAdmin   Boolean? @default(false)
  activated Boolean  @default(false)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model zz_21_crimi_exclu_area {
  id     Int?
  x      Float    @db.Float
  y      Float    @db.Float
  z      Float    @db.Float
  radius Int?
  active Boolean?
  sale   Int?     @db.TinyInt
  taxi   Int?     @db.TinyInt

  @@ignore
}

model zz_21_crimi_log_run_sac {
  id           Int      @id @default(autoincrement())
  entrepriseID Int
  playerID     Int
  nombre       Int
  itemID       Int
  total        Int
  time         DateTime @default(now()) @db.Timestamp(0)
}

model zz_21_crimi_menu {
  id           Int       @id @default(autoincrement())
  playerID     Int
  x            Float     @db.Float
  y            Float     @db.Float
  z            Float     @db.Float
  h            Float     @db.Float
  cana         Boolean   @default(false)
  coca         Boolean   @default(false)
  meth         Boolean   @default(false)
  venteItem    Boolean   @default(false)
  achatArme    Boolean   @default(false)
  fakePaper    Int       @default(0)
  pieceDArme   Int       @default(0)
  blanchi      Int       @default(0)
  entrepriseID String?   @default("0") @db.Text
  garageID     Int?
  volVeh       Boolean   @default(false)
  date         DateTime? @db.Date
  canUse       Int       @default(0)
  comment      String    @db.Text
  main         Int?      @db.TinyInt
  run          Int?      @default(0) @db.TinyInt
}

model zz_21_crimi_run_sac {
  id           Int      @id @default(autoincrement())
  entrepriseID Int
  playerID     Int
  nombre       Int
  itemID       Int
  tagGrp       String   @db.MediumText
  time         DateTime @default(now()) @db.Timestamp(0)
}

model zz_21_crimi_veh_traffic {
  id    Int     @id @default(autoincrement()) @db.UnsignedInt
  model Int?
  name  String? @db.VarChar(50)
}

model zz_21_crimi_washings_machines {
  id           Int   @id @default(autoincrement()) @db.UnsignedInt
  x            Float @db.Float
  y            Float @db.Float
  z            Float @db.Float
  h            Float @db.Float
  quantity     Int   @default(0) @db.UnsignedInt
  maxQuantity  Int   @default(0) @db.UnsignedInt
  entrepriseID Int   @default(255) @db.UnsignedInt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model zz_21_farm_transfo_crimi {
  id             Int
  item           Int?
  nbrItem        Int?
  nomItem        String? @db.VarChar(50)
  itemTransfo    Int?
  nbrItemTransfo Int?
  nomItemTransfo String? @db.VarChar(50)
  time           Int?
  rayon          Int?
  type           String  @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model zz_21_log_crimi_paiement_npc {
  id       Int?
  date     DateTime @default(now()) @db.Date
  id_npc   Int?
  price    Int?
  playerID Int?

  @@ignore
}

model zz_21_log_crimi_point {
  id           Int      @id @default(autoincrement()) @db.UnsignedInt
  playerID     Int?
  entrepriseID Int?
  time         DateTime @default(now()) @db.Timestamp(0)
  total        Int?
}

model zz_21_log_crimi_recell {
  id                 Int      @id @default(autoincrement())
  playerID           Int?
  givedItemID        Int
  givedQuantity      Int
  blackMoneyReceived Int
  timestamp          DateTime @default(now()) @db.Timestamp(0)
}

model zz_21_log_crimi_recipes {
  id           Int      @id @default(autoincrement()) @db.UnsignedInt
  recipeID     Int      @default(0)
  entrepriseID Int      @default(0)
  playerID     Int      @default(0)
  timestamp    DateTime @default(now()) @db.Timestamp(0)
}

model zz_21_log_crimi_rob {
  id           Int      @id @default(autoincrement())
  entrepriseID Int
  playerID     Int
  date         DateTime @default(now()) @db.DateTime(0)
  type         String   @db.VarChar(50)
  done         Int      @default(0)
  del          Int      @default(0)
  position     Int
}

model zz_21_log_crimi_sales {
  id                 Int      @id @default(autoincrement())
  playerID           Int?
  itemID             Int
  quantity           Int
  blackMoneyReceived Int
  timestamp          DateTime @default(now()) @db.Timestamp(0)
}

model zz_21_log_crimi_traffic_veh {
  id           Int      @id @default(autoincrement()) @db.UnsignedInt
  playerID     Int?
  model        String   @db.Text
  time         DateTime @default(now()) @db.Timestamp(0)
  price        Int?
  name         String?  @db.VarChar(50)
  entrepriseID Int?
}

model zz_21_log_crimi_washing {
  id        Int      @id @default(autoincrement())
  playerID  Int?
  quantity  Int
  type      String   @db.VarChar(255)
  timestamp DateTime @default(now()) @db.Timestamp(0)
}

model zz_21_log_recolte_crimi {
  id       Int      @id @default(autoincrement())
  playerID Int
  champID  Int
  time     DateTime @default(now()) @db.Timestamp(0)
}

model doors_acces {
  id           Int     @id @default(autoincrement())
  entrepriseID Int?
  acces        String? @db.VarChar(100)

  @@index([entrepriseID], map: "21_doors_acces_FK")
  @@map("21_doors_acces")
}

enum banks_bankType {
  fleeca
  pacific

  @@map("21_banks_bankType")
}

enum messenger_group_player_link_role {
  OWNER
  ADMIN
  BASIC

  @@map("21_messenger_group_player_link_role")
}

enum crimi_config_tasks_keyType {
  boolean
  number
  string
  array
  object

  @@map("21_crimi_config_tasks_keyType")
}
